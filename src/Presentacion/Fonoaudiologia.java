/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import AccesoDatos.OpFonoaudiologia;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 * Esta clase permite pintar la ventana Fonoaudiología, con sus respectivos componentes, para el manejo de la información del desarrollo del lenguaje
 * @author Cristian A. Hoyos Jaramillo
 * @author Daniela Estrada Monsalve
 * @author Yeisson A. Ochoa Villa
 */
public class Fonoaudiologia extends javax.swing.JFrame {
    Map<String, String> pr;
    Map<Integer, String> p;
    
    public Fonoaudiologia() {
        initComponents();
        setIconImage (new ImageIcon(getClass().getResource("/Imagenes/fonoaudiologia-icon.png")).getImage());
        jxtpDeslloLeng.add(jpanelDeslloLeng);
        jxtpControlEsf.add(jpanelControlEsfinteres);
        jxtpObservaciones.add(jpanelObservaciones);
        FechaFonoaudiologia.setDate(new Date());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpanelDeslloLeng = new javax.swing.JPanel();
        labelActPreling = new javax.swing.JLabel();
        jcActPrelinguisticas = new javax.swing.JComboBox();
        labelActLing = new javax.swing.JLabel();
        jcActLinguisticas = new javax.swing.JComboBox();
        labelTipoLeng = new javax.swing.JLabel();
        jcTipoLenguaje = new javax.swing.JComboBox();
        labelRespNombre = new javax.swing.JLabel();
        jcRespNombre = new javax.swing.JComboBox();
        labelConoceNombr = new javax.swing.JLabel();
        jcConoceNombre = new javax.swing.JComboBox();
        labelAlimentacionAct = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        txtAlimentacionActual = new javax.swing.JTextArea();
        jpanelControlEsfinteres = new javax.swing.JPanel();
        labelControlEsf = new javax.swing.JLabel();
        jcControlEsfinteres = new javax.swing.JComboBox();
        labelVD = new javax.swing.JLabel();
        jcVesicalDiurno = new javax.swing.JComboBox();
        labelVN = new javax.swing.JLabel();
        jcVesicalNocturno = new javax.swing.JComboBox();
        labelAD = new javax.swing.JLabel();
        jcAnalDiurno = new javax.swing.JComboBox();
        labelAN = new javax.swing.JLabel();
        jcAnalNocturno = new javax.swing.JComboBox();
        jpanelObservaciones = new javax.swing.JPanel();
        labelObservaciones = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        txtObservaciones = new javax.swing.JTextArea();
        labelFecha = new javax.swing.JLabel();
        FechaFonoaudiologia = new com.toedter.calendar.JDateChooser();
        labelTitulo = new javax.swing.JLabel();
        btnCrearFonoaudiologia = new javax.swing.JButton();
        btnBuscarFisioterapia = new javax.swing.JButton();
        btnLimpiarFisioterapia = new javax.swing.JButton();
        btnSalirFisioterapia = new javax.swing.JButton();
        labelProfesional = new javax.swing.JLabel();
        txtDocProf = new java.awt.TextField();
        btnBusquedaProf = new javax.swing.JButton();
        jcProfesional = new javax.swing.JComboBox();
        labelObligatorios = new javax.swing.JLabel();
        jXTaskPaneContainer1 = new org.jdesktop.swingx.JXTaskPaneContainer();
        jxtpDeslloLeng = new org.jdesktop.swingx.JXTaskPane();
        jxtpControlEsf = new org.jdesktop.swingx.JXTaskPane();
        jxtpObservaciones = new org.jdesktop.swingx.JXTaskPane();
        labelDoc = new javax.swing.JLabel();
        txtDocPac = new java.awt.TextField();
        btnBusquedaPac = new javax.swing.JButton();
        jcPaciente = new javax.swing.JComboBox();
        labelNHistoriaClinica = new javax.swing.JLabel();
        txtNHC = new java.awt.TextField();
        jLabel1 = new javax.swing.JLabel();

        jpanelDeslloLeng.setMinimumSize(new java.awt.Dimension(1121, 300));
        jpanelDeslloLeng.setPreferredSize(new java.awt.Dimension(1121, 300));
        jpanelDeslloLeng.setLayout(null);

        labelActPreling.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelActPreling.setText("Actividades prelingüísticas*");
        jpanelDeslloLeng.add(labelActPreling);
        labelActPreling.setBounds(30, 60, 172, 15);

        jcActPrelinguisticas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Normal", "Anormal" }));
        jpanelDeslloLeng.add(jcActPrelinguisticas);
        jcActPrelinguisticas.setBounds(200, 60, 140, 27);

        labelActLing.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelActLing.setText("Actividades lingüísticas*");
        jpanelDeslloLeng.add(labelActLing);
        labelActLing.setBounds(600, 60, 151, 15);

        jcActLinguisticas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Normal", "Anormal" }));
        jpanelDeslloLeng.add(jcActLinguisticas);
        jcActLinguisticas.setBounds(770, 60, 140, 27);

        labelTipoLeng.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelTipoLeng.setText("Tipo de lenguaje*");
        jpanelDeslloLeng.add(labelTipoLeng);
        labelTipoLeng.setBounds(970, 60, 110, 15);

        jcTipoLenguaje.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Verbal", "No verbal" }));
        jpanelDeslloLeng.add(jcTipoLenguaje);
        jcTipoLenguaje.setBounds(1120, 60, 140, 27);

        labelRespNombre.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelRespNombre.setText("Responde al nombre*");
        jpanelDeslloLeng.add(labelRespNombre);
        labelRespNombre.setBounds(30, 110, 130, 15);

        jcRespNombre.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Sí", "No", "Algunas veces" }));
        jpanelDeslloLeng.add(jcRespNombre);
        jcRespNombre.setBounds(200, 110, 140, 27);

        labelConoceNombr.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelConoceNombr.setText("Conoce su nombre*");
        jpanelDeslloLeng.add(labelConoceNombr);
        labelConoceNombr.setBounds(600, 110, 120, 15);

        jcConoceNombre.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Sí", "No" }));
        jpanelDeslloLeng.add(jcConoceNombre);
        jcConoceNombre.setBounds(770, 110, 140, 27);

        labelAlimentacionAct.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelAlimentacionAct.setText("Alimentación actual*");
        jpanelDeslloLeng.add(labelAlimentacionAct);
        labelAlimentacionAct.setBounds(30, 160, 120, 15);

        txtAlimentacionActual.setColumns(20);
        txtAlimentacionActual.setRows(5);
        jScrollPane14.setViewportView(txtAlimentacionActual);

        jpanelDeslloLeng.add(jScrollPane14);
        jScrollPane14.setBounds(200, 160, 360, 60);

        jpanelControlEsfinteres.setMinimumSize(new java.awt.Dimension(1121, 250));
        jpanelControlEsfinteres.setPreferredSize(new java.awt.Dimension(1121, 250));
        jpanelControlEsfinteres.setLayout(null);

        labelControlEsf.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelControlEsf.setText("Tiene control de esfínteres*");
        jpanelControlEsfinteres.add(labelControlEsf);
        labelControlEsf.setBounds(20, 40, 160, 15);

        jcControlEsfinteres.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Sí", "No" }));
        jcControlEsfinteres.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcControlEsfinteresItemStateChanged(evt);
            }
        });
        jpanelControlEsfinteres.add(jcControlEsfinteres);
        jcControlEsfinteres.setBounds(190, 40, 140, 27);

        labelVD.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelVD.setText("Vesical diurno*");
        jpanelControlEsfinteres.add(labelVD);
        labelVD.setBounds(420, 40, 94, 15);

        jcVesicalDiurno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Sí", "No" }));
        jcVesicalDiurno.setEnabled(false);
        jpanelControlEsfinteres.add(jcVesicalDiurno);
        jcVesicalDiurno.setBounds(590, 40, 140, 27);

        labelVN.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelVN.setText("Vesical nocturno*");
        jpanelControlEsfinteres.add(labelVN);
        labelVN.setBounds(800, 40, 100, 15);

        jcVesicalNocturno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Sí", "No" }));
        jcVesicalNocturno.setEnabled(false);
        jpanelControlEsfinteres.add(jcVesicalNocturno);
        jcVesicalNocturno.setBounds(950, 40, 140, 27);

        labelAD.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelAD.setText("Anal diurno*");
        jpanelControlEsfinteres.add(labelAD);
        labelAD.setBounds(20, 100, 77, 15);

        jcAnalDiurno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Sí", "No" }));
        jcAnalDiurno.setEnabled(false);
        jpanelControlEsfinteres.add(jcAnalDiurno);
        jcAnalDiurno.setBounds(190, 100, 140, 27);

        labelAN.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelAN.setText("Anal nocturno*");
        jpanelControlEsfinteres.add(labelAN);
        labelAN.setBounds(420, 100, 100, 15);

        jcAnalNocturno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Sí", "No" }));
        jcAnalNocturno.setEnabled(false);
        jpanelControlEsfinteres.add(jcAnalNocturno);
        jcAnalNocturno.setBounds(590, 100, 140, 27);

        jpanelObservaciones.setMinimumSize(new java.awt.Dimension(1121, 133));
        jpanelObservaciones.setPreferredSize(new java.awt.Dimension(1121, 133));
        jpanelObservaciones.setLayout(null);

        labelObservaciones.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelObservaciones.setText("Observaciones*");
        jpanelObservaciones.add(labelObservaciones);
        labelObservaciones.setBounds(20, 30, 120, 15);

        txtObservaciones.setColumns(20);
        txtObservaciones.setRows(5);
        jScrollPane13.setViewportView(txtObservaciones);

        jpanelObservaciones.add(jScrollPane13);
        jScrollPane13.setBounds(190, 30, 910, 60);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Fonoaudiología");
        setMinimumSize(new java.awt.Dimension(1330, 700));
        setResizable(false);
        getContentPane().setLayout(null);

        labelFecha.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelFecha.setText("*Fecha:");
        getContentPane().add(labelFecha);
        labelFecha.setBounds(30, 120, 120, 15);

        FechaFonoaudiologia.setDateFormatString("dd-MM-yyyy");
        FechaFonoaudiologia.setEnabled(false);
        FechaFonoaudiologia.setName("FechaN"); // NOI18N
        getContentPane().add(FechaFonoaudiologia);
        FechaFonoaudiologia.setBounds(200, 120, 181, 22);

        labelTitulo.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        labelTitulo.setText("FONOAUDIOLOGÍA");
        getContentPane().add(labelTitulo);
        labelTitulo.setBounds(610, 30, 110, 15);

        btnCrearFonoaudiologia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/add.png"))); // NOI18N
        btnCrearFonoaudiologia.setText("Crear");
        btnCrearFonoaudiologia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearFonoaudiologiaActionPerformed(evt);
            }
        });
        getContentPane().add(btnCrearFonoaudiologia);
        btnCrearFonoaudiologia.setBounds(210, 610, 130, 34);

        btnBuscarFisioterapia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/search.png"))); // NOI18N
        btnBuscarFisioterapia.setText("Buscar");
        btnBuscarFisioterapia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarFisioterapiaActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscarFisioterapia);
        btnBuscarFisioterapia.setBounds(450, 610, 125, 34);

        btnLimpiarFisioterapia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Actions-edit-clear-icon.png"))); // NOI18N
        btnLimpiarFisioterapia.setText("Limpiar");
        btnLimpiarFisioterapia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarFisioterapiaActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpiarFisioterapia);
        btnLimpiarFisioterapia.setBounds(690, 610, 137, 34);

        btnSalirFisioterapia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Log-Out-icon.png"))); // NOI18N
        btnSalirFisioterapia.setText("Salir");
        btnSalirFisioterapia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirFisioterapiaActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalirFisioterapia);
        btnSalirFisioterapia.setBounds(950, 610, 137, 34);

        labelProfesional.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelProfesional.setText("*Registro del Profesional:");
        getContentPane().add(labelProfesional);
        labelProfesional.setBounds(740, 170, 140, 13);

        txtDocProf.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtDocProf);
        txtDocProf.setBounds(880, 170, 130, 19);

        btnBusquedaProf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/search.png"))); // NOI18N
        btnBusquedaProf.setToolTipText("La búsqueda se  puede generar a partir de los primeros dígitos del registro del profesional");
        btnBusquedaProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBusquedaProfActionPerformed(evt);
            }
        });
        getContentPane().add(btnBusquedaProf);
        btnBusquedaProf.setBounds(1020, 160, 50, 30);

        jcProfesional.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        getContentPane().add(jcProfesional);
        jcProfesional.setBounds(1080, 170, 220, 20);

        labelObligatorios.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        labelObligatorios.setText("Los campos con * son obligatorios");
        getContentPane().add(labelObligatorios);
        labelObligatorios.setBounds(570, 60, 210, 15);

        jXTaskPaneContainer1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jXTaskPaneContainer1.setPreferredSize(new java.awt.Dimension(1270, 300));
        org.jdesktop.swingx.VerticalLayout verticalLayout1 = new org.jdesktop.swingx.VerticalLayout();
        verticalLayout1.setGap(14);
        jXTaskPaneContainer1.setLayout(verticalLayout1);

        jxtpDeslloLeng.setCollapsed(true);
        jxtpDeslloLeng.setTitle("DESARROLLO DEL LENGUAJE");
        jXTaskPaneContainer1.add(jxtpDeslloLeng);

        jxtpControlEsf.setCollapsed(true);
        jxtpControlEsf.setTitle("CONTROL DE ESFÍNTERES");
        jXTaskPaneContainer1.add(jxtpControlEsf);

        jxtpObservaciones.setCollapsed(true);
        jxtpObservaciones.setTitle("OBSERVACIONES");
        jXTaskPaneContainer1.add(jxtpObservaciones);

        getContentPane().add(jXTaskPaneContainer1);
        jXTaskPaneContainer1.setBounds(10, 230, 1300, 350);

        labelDoc.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelDoc.setText("*Documento Paciente:");
        getContentPane().add(labelDoc);
        labelDoc.setBounds(30, 170, 141, 15);

        txtDocPac.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtDocPac);
        txtDocPac.setBounds(200, 170, 130, 19);

        btnBusquedaPac.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/search.png"))); // NOI18N
        btnBusquedaPac.setToolTipText("La búsqueda se  puede generar a partir de los primeros números del documento");
        btnBusquedaPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBusquedaPacActionPerformed(evt);
            }
        });
        getContentPane().add(btnBusquedaPac);
        btnBusquedaPac.setBounds(340, 160, 50, 30);

        jcPaciente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        jcPaciente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcPacienteItemStateChanged(evt);
            }
        });
        getContentPane().add(jcPaciente);
        jcPaciente.setBounds(400, 170, 250, 27);

        labelNHistoriaClinica.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelNHistoriaClinica.setText("*Número Historia Clínica:");
        getContentPane().add(labelNHistoriaClinica);
        labelNHistoriaClinica.setBounds(740, 120, 140, 15);

        txtNHC.setEnabled(false);
        getContentPane().add(txtNHC);
        txtNHC.setBounds(880, 120, 130, 19);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondo.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1320, 690);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Llama al método guardar
     * @param evt 
     */
    private void btnCrearFonoaudiologiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearFonoaudiologiaActionPerformed
        guardarFonoaudiologia();
    }//GEN-LAST:event_btnCrearFonoaudiologiaActionPerformed
    /**
     * Llama a la interfaz para la visualización de los registros
     * @param evt 
     */
    private void btnBuscarFisioterapiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarFisioterapiaActionPerformed
        new FonoaudiologiaRegistros().setVisible(true);
    }//GEN-LAST:event_btnBuscarFisioterapiaActionPerformed
    /**
     * Limpia los campos del formulario, asignandoles el valor por defecto
     * @param evt 
     */
    private void btnLimpiarFisioterapiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarFisioterapiaActionPerformed
        FechaFonoaudiologia.setDate(new Date());
        jcPaciente.setEnabled(true);
        jcPaciente.removeAllItems();
        jcPaciente.addItem("Seleccione");
        txtNHC.setText("");
        txtDocPac.setEnabled(true);
        btnBusquedaPac.setEnabled(true);
        jcActPrelinguisticas.setEnabled(true);
        jcActPrelinguisticas.setSelectedIndex(0);
        jcActLinguisticas.setEnabled(true);
        jcActLinguisticas.setSelectedIndex(0);
        jcTipoLenguaje.setEnabled(true);
        jcTipoLenguaje.setSelectedIndex(0);
        jcRespNombre.setEnabled(true);
        jcRespNombre.setSelectedIndex(0);
        jcConoceNombre.setEnabled(true);
        jcConoceNombre.setSelectedIndex(0);
        txtAlimentacionActual.setEnabled(true);
        txtAlimentacionActual.setText("");
        jcControlEsfinteres.setEnabled(true);
        jcControlEsfinteres.setSelectedIndex(0);
        jcVesicalDiurno.setEnabled(false);
        jcVesicalDiurno.setSelectedIndex(0);
        jcVesicalNocturno.setEnabled(false);
        jcVesicalNocturno.setSelectedIndex(0);
        jcAnalDiurno.setEnabled(false);
        jcAnalDiurno.setSelectedIndex(0);
        jcAnalNocturno.setEnabled(false);
        jcAnalNocturno.setSelectedIndex(0);
        txtObservaciones.setEnabled(true);
        txtObservaciones.setText("");
        jcProfesional.setEnabled(true);
        jcProfesional.removeAllItems();
        jcProfesional.addItem("Seleccione");
        txtDocProf.setEnabled(true);
        btnBusquedaProf.setEnabled(true);
        jxtpDeslloLeng.setCollapsed(true);
        jxtpControlEsf.setCollapsed(true);
        jxtpObservaciones.setCollapsed(true);
        btnCrearFonoaudiologia.setEnabled(true);
        txtDocProf.setText("");
        txtDocPac.setText("");
    }//GEN-LAST:event_btnLimpiarFisioterapiaActionPerformed
    /**
     * Regresa al menú principal
     * @param evt 
     */
    private void btnSalirFisioterapiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirFisioterapiaActionPerformed
        new Menu().setVisible(true);
        this.hide();
    }//GEN-LAST:event_btnSalirFisioterapiaActionPerformed

    /**
     * Búsqueda de los profesionales coincidentes según un carácter ingresado
     * @param evt 
     */
    private void btnBusquedaProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBusquedaProfActionPerformed
        if(txtDocProf.getText() == null || txtDocProf.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Debe ingresar por lo menos un carácter del número de registro del profesional", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }else{
            try {
                jcProfesional.removeAllItems();
                pr = OpFonoaudiologia.obtenerProfesionales(txtDocProf.getText());
                Iterator it = pr.keySet().iterator();
                if (pr.size()>0) {
                    //JOptionPane.showMessageDialog(null, "Se han encontrado coincidencias");
                }else{
                    //JOptionPane.showMessageDialog(null, "No se han encontrado coincidencias");
                }
                jcProfesional.addItem("Seleccione");
                while(it.hasNext()){
                    jcProfesional.addItem(pr.get(it.next()));
                }
                //txtDocProf.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(Fonoaudiologia.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnBusquedaProfActionPerformed

    /**
     * Habilita las opciones respectivas del panel control de esfinteres 
     * en caso de que en dicho campo se seleccione sí
     * @param evt 
     */
    private void jcControlEsfinteresItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcControlEsfinteresItemStateChanged
        if (jcControlEsfinteres.getSelectedItem().equals("Sí")) {
            jcVesicalDiurno.setEnabled(true);
            jcVesicalNocturno.setEnabled(true);
            jcAnalDiurno.setEnabled(true);
            jcAnalNocturno.setEnabled(true);
        }else{
            jcVesicalDiurno.setEnabled(false);
            jcVesicalNocturno.setEnabled(false);
            jcAnalDiurno.setEnabled(false);
            jcAnalNocturno.setEnabled(false);
        }
    }//GEN-LAST:event_jcControlEsfinteresItemStateChanged

    /**
     * Búsqueda de los pacientes coincidentes según un carácter ingresado
     * @param evt 
     */
    private void btnBusquedaPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBusquedaPacActionPerformed
        if(txtDocPac.getText() == null || txtDocPac.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Debe ingresar por lo menos un carácter del número de identificación del paciente", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }else{
            String diaFecha = String.valueOf(FechaFonoaudiologia.getCalendar().get(Calendar.DAY_OF_MONTH));
            String mesFecha = String.valueOf(FechaFonoaudiologia.getCalendar().get(Calendar.MONTH) + 1);
            String annoFecha = String.valueOf(FechaFonoaudiologia.getCalendar().get(Calendar.YEAR));
            String fecha = diaFecha + "/" + mesFecha + "/" + annoFecha;
            try {
                jcPaciente.removeAllItems();
                p = OpFonoaudiologia.obtenerPacientes(txtDocPac.getText(), fecha);
                Iterator it = p.keySet().iterator();
                if (p.size()>0) {
                    //JOptionPane.showMessageDialog(null, "Se han encontrado coincidencias");
                }else{
                    //JOptionPane.showMessageDialog(null, "No se han encontrado coincidencias");
                }
                jcPaciente.addItem("Seleccione");
                while(it.hasNext()){
                    jcPaciente.addItem(p.get(it.next()));
                }
                //txtDocPac.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(Evaluaciones.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnBusquedaPacActionPerformed

    /**
     * Carga el código de la historia clínica asociada, según el paciente seleccionado
     * @param evt 
     */
    private void jcPacienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcPacienteItemStateChanged
        if(jcPaciente.getItemCount() > 0){
            if (!jcPaciente.getSelectedItem().equals("Seleccione")) {
                try {
                    p = OpFonoaudiologia.obtenerPacientes();
                    for (Map.Entry<Integer, String> historiaClinica : p.entrySet()){
                        if (jcPaciente.getSelectedItem().toString().equals(historiaClinica.getValue())) {
                            txtNHC.setText(String.valueOf(historiaClinica.getKey()));
                        }
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Evaluaciones.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                txtNHC.setText("");
            }
        }
    }//GEN-LAST:event_jcPacienteItemStateChanged

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fonoaudiologia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fonoaudiologia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fonoaudiologia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fonoaudiologia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fonoaudiologia().setVisible(true);
            }
        });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static com.toedter.calendar.JDateChooser FechaFonoaudiologia;
    private javax.swing.JButton btnBuscarFisioterapia;
    public static javax.swing.JButton btnBusquedaPac;
    public static javax.swing.JButton btnBusquedaProf;
    public static javax.swing.JButton btnCrearFonoaudiologia;
    private javax.swing.JButton btnLimpiarFisioterapia;
    private javax.swing.JButton btnSalirFisioterapia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private org.jdesktop.swingx.JXTaskPaneContainer jXTaskPaneContainer1;
    public static javax.swing.JComboBox jcActLinguisticas;
    public static javax.swing.JComboBox jcActPrelinguisticas;
    public static javax.swing.JComboBox jcAnalDiurno;
    public static javax.swing.JComboBox jcAnalNocturno;
    public static javax.swing.JComboBox jcConoceNombre;
    public static javax.swing.JComboBox jcControlEsfinteres;
    public static javax.swing.JComboBox jcPaciente;
    public static javax.swing.JComboBox jcProfesional;
    public static javax.swing.JComboBox jcRespNombre;
    public static javax.swing.JComboBox jcTipoLenguaje;
    public static javax.swing.JComboBox jcVesicalDiurno;
    public static javax.swing.JComboBox jcVesicalNocturno;
    private javax.swing.JPanel jpanelControlEsfinteres;
    private javax.swing.JPanel jpanelDeslloLeng;
    private javax.swing.JPanel jpanelObservaciones;
    private org.jdesktop.swingx.JXTaskPane jxtpControlEsf;
    private org.jdesktop.swingx.JXTaskPane jxtpDeslloLeng;
    private org.jdesktop.swingx.JXTaskPane jxtpObservaciones;
    private javax.swing.JLabel labelAD;
    private javax.swing.JLabel labelAN;
    private javax.swing.JLabel labelActLing;
    private javax.swing.JLabel labelActPreling;
    private javax.swing.JLabel labelAlimentacionAct;
    private javax.swing.JLabel labelConoceNombr;
    private javax.swing.JLabel labelControlEsf;
    private javax.swing.JLabel labelDoc;
    private javax.swing.JLabel labelFecha;
    private javax.swing.JLabel labelNHistoriaClinica;
    private javax.swing.JLabel labelObligatorios;
    private javax.swing.JLabel labelObservaciones;
    private javax.swing.JLabel labelProfesional;
    private javax.swing.JLabel labelRespNombre;
    private javax.swing.JLabel labelTipoLeng;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JLabel labelVD;
    private javax.swing.JLabel labelVN;
    public static javax.swing.JTextArea txtAlimentacionActual;
    public static java.awt.TextField txtDocPac;
    public static java.awt.TextField txtDocProf;
    public static java.awt.TextField txtNHC;
    public static javax.swing.JTextArea txtObservaciones;
    // End of variables declaration//GEN-END:variables
    /**
     * Método que permite guardar la información de la fonoaudiología de un paciente
     * con base en los datos ingresados.
     */
    public void guardarFonoaudiologia(){
        String diaFecha, mesFecha, annoFecha, fecha, hc, actPrelinguisticas, actLinguisticas, tipoLenguaje, respNombre, conoceNombre, alimentacionActual, controlEsfinteres, vesicalDiurno, vesicalNocturno, analDiurno, analNocturno, Observaciones, profesional;
        profesional = "Seleccione";
        diaFecha = String.valueOf(FechaFonoaudiologia.getCalendar().get(Calendar.DAY_OF_MONTH));
        mesFecha = String.valueOf(FechaFonoaudiologia.getCalendar().get(Calendar.MONTH) + 1);
        annoFecha = String.valueOf(FechaFonoaudiologia.getCalendar().get(Calendar.YEAR));
        fecha = diaFecha + "/" + mesFecha + "/" + annoFecha;
        
        hc = txtNHC.getText();
        actPrelinguisticas = jcActPrelinguisticas.getSelectedItem().toString();
        actLinguisticas = jcActLinguisticas.getSelectedItem().toString();
        tipoLenguaje = jcTipoLenguaje.getSelectedItem().toString();
        respNombre = jcRespNombre.getSelectedItem().toString();
        conoceNombre = jcConoceNombre.getSelectedItem().toString();
        alimentacionActual = txtAlimentacionActual.getText();
        controlEsfinteres = jcControlEsfinteres.getSelectedItem().toString();
        vesicalDiurno = jcVesicalDiurno.getSelectedItem().toString();
        vesicalNocturno = jcVesicalNocturno.getSelectedItem().toString();
        analDiurno = jcAnalDiurno.getSelectedItem().toString();
        analNocturno = jcAnalNocturno.getSelectedItem().toString();
        Observaciones = txtObservaciones.getText();
        
        if (!"Seleccione".equals(jcProfesional.getSelectedItem().toString())) {
            for (Map.Entry<String, String> profesionales : pr.entrySet()){
                String u = profesionales.getKey();
                if (jcProfesional.getSelectedItem().toString().equals(profesionales.getValue())) {
                    profesional = u;
                }
            }
        }
        
        if (!controlEsfinteres.equals("Seleccione")) {
            if (controlEsfinteres.equals("Sí")) {
                if((fecha == null || fecha.trim().isEmpty()) || (hc == null || hc.trim().isEmpty()) || (actPrelinguisticas.equals("Seleccione")) || (actLinguisticas.equals("Seleccione")) || (tipoLenguaje.equals("Seleccione")) || (respNombre.equals("Seleccione")) || (conoceNombre.equals("Seleccione")) || (alimentacionActual == null || alimentacionActual.trim().isEmpty()) || (vesicalDiurno.equals("Seleccione")) || (vesicalNocturno.equals("Seleccione")) || (analDiurno.equals("Seleccione")) ||(analNocturno.equals("Seleccione")) || (profesional.equals("Seleccione")) || (Observaciones == null || Observaciones.trim().isEmpty())){
                    JOptionPane.showMessageDialog(null, "Se deben diligenciar todos los campos obligatorios", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
                }else{
                    if (OpFonoaudiologia.validarTerapias(hc)) {
                        int a = OpFonoaudiologia.guardar(fecha, hc, actPrelinguisticas, actLinguisticas, tipoLenguaje, respNombre, conoceNombre, alimentacionActual, controlEsfinteres, vesicalDiurno, vesicalNocturno, analDiurno, analNocturno, Observaciones, profesional);
                        if (a == 0) {
                            FechaFonoaudiologia.setDate(new Date());
                            jcPaciente.removeAllItems();
                            jcPaciente.addItem("Seleccione");
                            txtNHC.setText("");
                            jcActPrelinguisticas.setSelectedIndex(0);
                            jcActLinguisticas.setSelectedIndex(0);
                            jcTipoLenguaje.setSelectedIndex(0);
                            jcRespNombre.setSelectedIndex(0);
                            jcConoceNombre.setSelectedIndex(0);
                            txtAlimentacionActual.setText("");
                            jcControlEsfinteres.setSelectedIndex(0);
                            jcVesicalDiurno.setEnabled(false);
                            jcVesicalDiurno.setSelectedIndex(0);
                            jcVesicalNocturno.setEnabled(false);
                            jcVesicalNocturno.setSelectedIndex(0);
                            jcAnalDiurno.setEnabled(false);
                            jcAnalDiurno.setSelectedIndex(0);
                            jcAnalNocturno.setEnabled(false);
                            jcAnalNocturno.setSelectedIndex(0);
                            txtObservaciones.setEnabled(true);
                            txtObservaciones.setText("");
                            jcProfesional.setEnabled(true);
                            jcProfesional.removeAllItems();
                            jcProfesional.addItem("Seleccione");
                            txtDocProf.setEnabled(true);
                            btnCrearFonoaudiologia.setEnabled(true);
                            jxtpDeslloLeng.setCollapsed(true);
                            jxtpControlEsf.setCollapsed(true);
                            jxtpObservaciones.setCollapsed(true);
                            txtDocProf.setText("");
                            txtDocPac.setText("");
                        }
                    }else{
                        JOptionPane.showMessageDialog(null, "El paciente ingresado no tiene asignada dicha terapia", "Gestión Asdesilla", JOptionPane.WARNING_MESSAGE);
                        jxtpDeslloLeng.setCollapsed(true);
                        jxtpControlEsf.setCollapsed(true);
                        jxtpObservaciones.setCollapsed(true);
                    }
                }
            }else{
                if((fecha == null || fecha.trim().isEmpty()) || (hc == null || hc.trim().isEmpty()) || (actPrelinguisticas.equals("Seleccione")) || (actLinguisticas.equals("Seleccione")) || (tipoLenguaje.equals("Seleccione")) || (respNombre.equals("Seleccione")) || (conoceNombre.equals("Seleccione")) || (alimentacionActual == null || alimentacionActual.trim().isEmpty()) || (profesional.equals("Seleccione")) || (Observaciones == null || Observaciones.trim().isEmpty())){
                    JOptionPane.showMessageDialog(null, "Se deben diligenciar todos los campos obligatorios", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
                }else{
                    if (OpFonoaudiologia.validarTerapias(hc)) {
                        int a = OpFonoaudiologia.guardar(fecha, hc, actPrelinguisticas, actLinguisticas, tipoLenguaje, respNombre, conoceNombre, alimentacionActual, controlEsfinteres, vesicalDiurno, vesicalNocturno, analDiurno, analNocturno, Observaciones, profesional);
                        if (a == 0) {
                            FechaFonoaudiologia.setDate(new Date());
                            jcPaciente.removeAllItems();
                            jcPaciente.addItem("Seleccione");
                            txtNHC.setText("");
                            jcActPrelinguisticas.setSelectedIndex(0);
                            jcActLinguisticas.setSelectedIndex(0);
                            jcTipoLenguaje.setSelectedIndex(0);
                            jcRespNombre.setSelectedIndex(0);
                            jcConoceNombre.setSelectedIndex(0);
                            txtAlimentacionActual.setText("");
                            jcControlEsfinteres.setSelectedIndex(0);
                            jcVesicalDiurno.setEnabled(false);
                            jcVesicalDiurno.setSelectedIndex(0);
                            jcVesicalNocturno.setEnabled(false);
                            jcVesicalNocturno.setSelectedIndex(0);
                            jcAnalDiurno.setEnabled(false);
                            jcAnalDiurno.setSelectedIndex(0);
                            jcAnalNocturno.setEnabled(false);
                            jcAnalNocturno.setSelectedIndex(0);
                            txtObservaciones.setEnabled(true);
                            txtObservaciones.setText("");
                            jcProfesional.setEnabled(true);
                            jcProfesional.removeAllItems();
                            jcProfesional.addItem("Seleccione");
                            txtDocProf.setEnabled(true);
                            btnCrearFonoaudiologia.setEnabled(true);
                            jxtpDeslloLeng.setCollapsed(true);
                            jxtpControlEsf.setCollapsed(true);
                            jxtpObservaciones.setCollapsed(true);
                            txtDocProf.setText("");
                            txtDocPac.setText("");
                        }
                    }else{
                        JOptionPane.showMessageDialog(null, "El paciente ingresado no tiene asignada dicha terapia", "Gestión Asdesilla", JOptionPane.WARNING_MESSAGE);
                        jxtpDeslloLeng.setCollapsed(true);
                        jxtpControlEsf.setCollapsed(true);
                        jxtpObservaciones.setCollapsed(true);
                    }
                }
            }
        }else{
            if((fecha == null || fecha.trim().isEmpty()) || (hc == null || hc.trim().isEmpty()) || (actPrelinguisticas.equals("Seleccione")) || (actLinguisticas.equals("Seleccione")) || (tipoLenguaje.equals("Seleccione")) || (respNombre.equals("Seleccione")) || (conoceNombre.equals("Seleccione")) || (alimentacionActual == null || alimentacionActual.trim().isEmpty()) || (profesional.equals("Seleccione")) || (Observaciones == null || Observaciones.trim().isEmpty())){
                JOptionPane.showMessageDialog(null, "Se deben diligenciar todos los campos obligatorios", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(null, "Debe diligenciar el campo tiene control de esfínteres", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
}
