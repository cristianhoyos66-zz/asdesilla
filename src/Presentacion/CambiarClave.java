/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Presentacion;

import AccesoDatos.OpInicio;
import AccesoDatos.OpUsuarios;
import static Presentacion.InicioSesion.r;
import static Presentacion.InicioSesion.usuario;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 * Esta clase permite pintar la ventana Cambiar clave, con sus respectivos componentes, 
 * para que el usuario pueda cambiar su contraseña al iniciar sesión
 * @author Cristian A. Hoyos Jaramillo
 * @author Daniela Estrada Monsalve
 * @author Yeisson A. Ochoa Villa
 */
public class CambiarClave extends javax.swing.JFrame {

    public CambiarClave() {
        initComponents();
        setIconImage (new ImageIcon(getClass().getResource("/Imagenes/login.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelContrActual = new javax.swing.JLabel();
        txtClaveActual = new javax.swing.JPasswordField();
        labelContrNueva = new javax.swing.JLabel();
        txtClaveNueva = new javax.swing.JPasswordField();
        btnAceptar = new javax.swing.JButton();
        labelTitulo = new javax.swing.JLabel();
        labelValidarContrNueva = new javax.swing.JLabel();
        txtValidarClaveNueva = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(407, 276));
        setPreferredSize(new java.awt.Dimension(481, 310));
        setResizable(false);
        getContentPane().setLayout(null);

        labelContrActual.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelContrActual.setText("*Contraseña actual:");
        getContentPane().add(labelContrActual);
        labelContrActual.setBounds(30, 80, 140, 15);
        getContentPane().add(txtClaveActual);
        txtClaveActual.setBounds(240, 80, 200, 22);

        labelContrNueva.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelContrNueva.setText("*Nueva contraseña:");
        getContentPane().add(labelContrNueva);
        labelContrNueva.setBounds(30, 130, 140, 15);
        getContentPane().add(txtClaveNueva);
        txtClaveNueva.setBounds(240, 130, 200, 22);

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Accept-icon.png"))); // NOI18N
        btnAceptar.setText("Aceptar");
        btnAceptar.setToolTipText("Recuerde que la Nueva Contraseña y la confirmación deben coincidir");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAceptar);
        btnAceptar.setBounds(190, 240, 100, 34);

        labelTitulo.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        labelTitulo.setText("POR FAVOR CAMBIE SU CONTRASEÑA");
        getContentPane().add(labelTitulo);
        labelTitulo.setBounds(130, 20, 230, 15);

        labelValidarContrNueva.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelValidarContrNueva.setText("*Confirmar nueva contraseña:");
        getContentPane().add(labelValidarContrNueva);
        labelValidarContrNueva.setBounds(30, 180, 170, 15);
        getContentPane().add(txtValidarClaveNueva);
        txtValidarClaveNueva.setBounds(240, 180, 200, 22);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondo.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 480, 310);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Se llama al método Cambiar Clave
     * @param evt 
     */
    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        cambiarClave();
    }//GEN-LAST:event_btnAceptarActionPerformed

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cambiarClave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cambiarClave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cambiarClave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cambiarClave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cambiarClave().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnAceptar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel labelContrActual;
    private javax.swing.JLabel labelContrNueva;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JLabel labelValidarContrNueva;
    public static javax.swing.JPasswordField txtClaveActual;
    public static javax.swing.JPasswordField txtClaveNueva;
    public static javax.swing.JPasswordField txtValidarClaveNueva;
    // End of variables declaration//GEN-END:variables

    /**
     * Método que permite cambiar la contraseña generica asignada a un usuario al iniciar sesión 
     */
    private void cambiarClave(){
        String claveActual, claveNueva, validarClaveNueva;
        claveActual = txtClaveActual.getText();
        claveNueva = txtClaveNueva.getText();
        validarClaveNueva = txtValidarClaveNueva.getText();
        
        if((claveActual == null || claveActual.trim().isEmpty()) || (claveNueva == null || claveNueva.trim().isEmpty()) || (validarClaveNueva == null || validarClaveNueva.trim().isEmpty())){
            JOptionPane.showMessageDialog(null, "Se deben diligenciar todos los campos obligatorios", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }else if(claveActual.length()< 6 || claveNueva.length()< 6){
            claveActual = null;
            claveNueva = null;
            JOptionPane.showMessageDialog(null, "La contraseña actual y/o nueva deben tener una longitud mínima de seis caracteres", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }else if(claveActual.matches("^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{"+claveActual.length()+"}$") == false){
            claveActual = null;
            JOptionPane.showMessageDialog(null, "El campo contraseña actual debe contener letras minúsculas, mayúsculas y números", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }else if(claveNueva.matches("^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{"+claveNueva.length()+"}$") == false){
            claveNueva = null;
            JOptionPane.showMessageDialog(null, "El campo contraseña nueva debe contener letras minúsculas, mayúsculas y números", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }else if(claveActual.equals(claveNueva)){
            claveActual = null;
            claveNueva = null;
            JOptionPane.showMessageDialog(null, "La contraseña nueva debe ser diferente a la contraseña actual", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }else if(validarClaveNueva.length()< 6){
            validarClaveNueva = null;
            JOptionPane.showMessageDialog(null, "El campo validar contraseña nueva debe tener una longitud mínima de seis caracteres", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }else if(validarClaveNueva.matches("^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{"+validarClaveNueva.length()+"}$") == false){
            validarClaveNueva = null;
            JOptionPane.showMessageDialog(null, "El campo validar contraseña nueva debe contener letras minúsculas, mayúsculas y números", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }else if(!claveNueva.equals(validarClaveNueva)){
            claveNueva = null;
            JOptionPane.showMessageDialog(null, "El valor ingresado en el campo confirmar contraseña nueva \n no coincide con el valor del campo contraseña nueva", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }else{
            try {
                claveNueva = OpUsuarios.hashText(claveNueva);
                OpUsuarios.cambiarClave(InicioSesion.usuario, claveNueva);
                r = OpInicio.validarRol(usuario, claveNueva);
                new Menu().setVisible(true);
                setVisible(false);
            } catch (Exception ex) {
                Logger.getLogger(CambiarClave.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
