/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import AccesoDatos.OpFamiliares;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.Map;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 * Esta clase permite pintar la ventana Familiares, con sus respectivos componentes, para el manejo de la información del familiar de un paciente
 * @author Cristian A. Hoyos Jaramillo
 * @author Daniela Estrada Monsalve
 * @author Yeisson A. Ochoa Villa
 */
public class Familiares extends javax.swing.JFrame {
    Map<String, String> p;
    TreeMap<Integer, String> td;
    TreeMap<Integer, String> e;
    TreeMap<Integer, String> d;
    TreeMap<Integer, String> m;
    
    public Familiares() {
        try {
            initComponents();
            Calendar cal = Calendar.getInstance();
            cal.add(Calendar.DATE, -1);
            Date date = cal.getTime();
            FechaN.setMaxSelectableDate(date);
            FechaN.getDateEditor().setEnabled(false);
            if (InicioSesion.r.equals("2")) {
                btnCrear.setEnabled(false);
            }
            
            td = OpFamiliares.obtenerParentesco();
            Iterator t = td.keySet().iterator();
            while(t.hasNext()){
                jcParentesco.addItem(td.get(t.next()));
            }
            
            e = OpFamiliares.obtenerEps();
            Iterator l = e.keySet().iterator();
            while(l.hasNext()){
                jcEPS.addItem(e.get(l.next()));
            }
            
            d = OpFamiliares.obtenerDepartamentos();
            Iterator dep = d.keySet().iterator();
            while(dep.hasNext()){
                jcDepartamento.addItem(d.get(dep.next()));
            }
            FechaN.setDate(new Date());
            setIconImage (new ImageIcon(getClass().getResource("/Imagenes/family-icon.png")).getImage());
        } catch (SQLException ex) {
            Logger.getLogger(Familiares.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel14 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        textField4 = new java.awt.TextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        textField5 = new java.awt.TextField();
        textField6 = new java.awt.TextField();
        textField1 = new java.awt.TextField();
        label3 = new java.awt.Label();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        textField2 = new java.awt.TextField();
        label5 = new java.awt.Label();
        label4 = new java.awt.Label();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        label6 = new java.awt.Label();
        jComboBox3 = new javax.swing.JComboBox();
        label7 = new java.awt.Label();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jRadioButton2 = new javax.swing.JRadioButton();
        jTextField1 = new javax.swing.JTextField();
        label8 = new java.awt.Label();
        textField3 = new java.awt.TextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jcTipoDoc = new javax.swing.JComboBox();
        btnCrear = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        txtCelular = new java.awt.TextField();
        txtDireccion = new java.awt.TextField();
        labelMunicipio = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        labelDireccion = new javax.swing.JLabel();
        jcParentesco = new javax.swing.JComboBox();
        btnLimpiar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        labelNDoc = new javax.swing.JLabel();
        labelParentesco = new javax.swing.JLabel();
        labelObligatorios = new javax.swing.JLabel();
        labelNombre = new javax.swing.JLabel();
        labelTelefono = new javax.swing.JLabel();
        labelBarrio = new javax.swing.JLabel();
        labelCelular = new javax.swing.JLabel();
        FechaN = new com.toedter.calendar.JDateChooser();
        labelFechaN = new javax.swing.JLabel();
        labelTitulo = new javax.swing.JLabel();
        labelAp1 = new javax.swing.JLabel();
        labelAp2 = new javax.swing.JLabel();
        labelEps = new javax.swing.JLabel();
        jcEPS = new javax.swing.JComboBox();
        txtIdFamiliar = new java.awt.TextField();
        txtNombre = new java.awt.TextField();
        txtApellido1 = new java.awt.TextField();
        txtApellido2 = new java.awt.TextField();
        txtTelefono = new java.awt.TextField();
        txtBarrio = new java.awt.TextField();
        labelDepartamento = new javax.swing.JLabel();
        jcDepartamento = new javax.swing.JComboBox();
        jcMunicipio = new javax.swing.JComboBox();
        labelGrFamiliar = new javax.swing.JLabel();
        txtGrFamiliar = new java.awt.TextField();
        btnGrFamiliar = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel14.setText("Nombre");

        jLabel16.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel16.setText("Tipo de vinculación");

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel15.setText("Aseguradora");

        jButton1.setText("Crear");

        jButton2.setText("Modificar");

        textField5.setEditable(false);

        textField6.setEditable(false);

        label3.setText("Fecha de nacimiento");

        label1.setText("Nombre");

        label2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label2.setText("INFORMACIÓN DEL PACIENTE");

        textField2.setEditable(false);

        label5.setText("Edad");

        label4.setText("Sexo");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel8.setText("Salud ");

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel9.setText("INFORMACIÓN DE RESPONSABLE");

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel10.setText("Parentesco");

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel11.setText("Edad");

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel12.setText("Teléfono");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel13.setText("INFORMACIÓN DEL ACOMPAÑANTE");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setText("Barrio");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel4.setText("Teléfono");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel2.setText("Dirección de residencia");

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel7.setText("Ocupación");

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel6.setText("Celular");

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel5.setText("Municipio");

        label6.setName(""); // NOI18N
        label6.setText("Tipo de documento");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        label7.setText("Número de documento");

        jButton3.setText("Buscar");

        jButton5.setText("Imprimir");

        jButton4.setText("Eliminar");

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setText("Lugar de expedición");

        jRadioButton2.setText("Femenino");

        label8.setText("Estado civil");

        jRadioButton1.setText("Masculino");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel20.setText("jLabel20");

        jLabel26.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel26.setText("Tipo de documento*");

        jcTipoDoc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "CC", "TI", "CE", "Registro Civil", "Pasaporte" }));
        jcTipoDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcTipoDocActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Familiares");
        setMinimumSize(new java.awt.Dimension(1150, 520));
        setResizable(false);
        getContentPane().setLayout(null);

        btnCrear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/add.png"))); // NOI18N
        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });
        getContentPane().add(btnCrear);
        btnCrear.setBounds(80, 450, 130, 34);

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/update.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setEnabled(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        getContentPane().add(btnModificar);
        btnModificar.setBounds(230, 450, 128, 34);

        txtCelular.setBackground(new java.awt.Color(255, 255, 255));
        txtCelular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCelularKeyTyped(evt);
            }
        });
        getContentPane().add(txtCelular);
        txtCelular.setBounds(680, 280, 160, 19);
        getContentPane().add(txtDireccion);
        txtDireccion.setBounds(680, 360, 260, 19);

        labelMunicipio.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelMunicipio.setText("*Municipio:");
        getContentPane().add(labelMunicipio);
        labelMunicipio.setBounds(540, 320, 68, 15);

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/search.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar);
        btnBuscar.setBounds(390, 450, 125, 34);

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/disable-icon.png"))); // NOI18N
        btnEliminar.setText("Deshabilitar");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar);
        btnEliminar.setBounds(550, 450, 140, 34);

        labelDireccion.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelDireccion.setText("*Dirección:");
        getContentPane().add(labelDireccion);
        labelDireccion.setBounds(540, 360, 68, 15);

        jcParentesco.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        getContentPane().add(jcParentesco);
        jcParentesco.setBounds(680, 120, 140, 27);

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Actions-edit-clear-icon.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpiar);
        btnLimpiar.setBounds(720, 450, 137, 34);

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Log-Out-icon.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir);
        btnSalir.setBounds(890, 450, 137, 34);

        labelNDoc.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelNDoc.setText("*Número de documento:");
        getContentPane().add(labelNDoc);
        labelNDoc.setBounds(40, 120, 150, 15);

        labelParentesco.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelParentesco.setText("*Parentesco:");
        getContentPane().add(labelParentesco);
        labelParentesco.setBounds(540, 120, 82, 15);

        labelObligatorios.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        labelObligatorios.setText("Los campos con * son obligatorios");
        getContentPane().add(labelObligatorios);
        labelObligatorios.setBounds(410, 70, 200, 15);

        labelNombre.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelNombre.setText("*Nombre:");
        getContentPane().add(labelNombre);
        labelNombre.setBounds(540, 160, 59, 15);

        labelTelefono.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelTelefono.setText("Teléfono:");
        getContentPane().add(labelTelefono);
        labelTelefono.setBounds(40, 280, 58, 15);

        labelBarrio.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelBarrio.setText("*Barrio:");
        getContentPane().add(labelBarrio);
        labelBarrio.setBounds(40, 360, 47, 15);

        labelCelular.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelCelular.setText("Celular:");
        labelCelular.setDoubleBuffered(true);
        getContentPane().add(labelCelular);
        labelCelular.setBounds(540, 280, 47, 15);

        FechaN.setDateFormatString("dd-MM-yyyy");
        FechaN.setMaxSelectableDate(new Date());
        FechaN.setName("FechaN"); // NOI18N
        getContentPane().add(FechaN);
        FechaN.setBounds(180, 240, 181, 22);

        labelFechaN.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelFechaN.setText("*Fecha de nacimiento:");
        getContentPane().add(labelFechaN);
        labelFechaN.setBounds(40, 240, 141, 15);

        labelTitulo.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        labelTitulo.setText("INFORMACIÓN FAMILIAR PACIENTE");
        getContentPane().add(labelTitulo);
        labelTitulo.setBounds(410, 30, 200, 15);

        labelAp1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelAp1.setText("*Primer Apellido:");
        getContentPane().add(labelAp1);
        labelAp1.setBounds(40, 200, 90, 15);

        labelAp2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelAp2.setText("Segundo Apellido:");
        getContentPane().add(labelAp2);
        labelAp2.setBounds(540, 200, 100, 15);

        labelEps.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelEps.setText("*EPS:");
        getContentPane().add(labelEps);
        labelEps.setBounds(540, 240, 40, 15);

        jcEPS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        getContentPane().add(jcEPS);
        jcEPS.setBounds(680, 240, 210, 27);
        getContentPane().add(txtIdFamiliar);
        txtIdFamiliar.setBounds(180, 120, 218, 19);
        getContentPane().add(txtNombre);
        txtNombre.setBounds(680, 160, 218, 19);
        getContentPane().add(txtApellido1);
        txtApellido1.setBounds(180, 200, 218, 19);
        getContentPane().add(txtApellido2);
        txtApellido2.setBounds(680, 200, 218, 19);

        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyTyped(evt);
            }
        });
        getContentPane().add(txtTelefono);
        txtTelefono.setBounds(180, 280, 180, 19);
        getContentPane().add(txtBarrio);
        txtBarrio.setBounds(180, 360, 220, 19);

        labelDepartamento.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelDepartamento.setText("*Departamento:");
        getContentPane().add(labelDepartamento);
        labelDepartamento.setBounds(40, 320, 90, 15);

        jcDepartamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        jcDepartamento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcDepartamentoItemStateChanged(evt);
            }
        });
        getContentPane().add(jcDepartamento);
        jcDepartamento.setBounds(180, 320, 210, 27);

        jcMunicipio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        getContentPane().add(jcMunicipio);
        jcMunicipio.setBounds(680, 320, 210, 27);

        labelGrFamiliar.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelGrFamiliar.setText("*Grupo Familiar:");
        getContentPane().add(labelGrFamiliar);
        labelGrFamiliar.setBounds(40, 160, 100, 15);

        txtGrFamiliar.setEnabled(false);
        getContentPane().add(txtGrFamiliar);
        txtGrFamiliar.setBounds(180, 160, 218, 19);

        btnGrFamiliar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/family-icon-2.png"))); // NOI18N
        btnGrFamiliar.setToolTipText("Agregar grupo familar previamente creado o crear uno.");
        btnGrFamiliar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrFamiliarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGrFamiliar);
        btnGrFamiliar.setBounds(410, 160, 50, 20);

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondo.jpg"))); // NOI18N
        jLabel19.setText("jLabel19");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(0, 0, 1150, 510);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Llama al método guardar.
     * @param evt 
     */
    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        guardar();
    }//GEN-LAST:event_btnCrearActionPerformed

    /**
     * Llama al método modificar.
     * @param evt 
     */
    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        modificar();
    }//GEN-LAST:event_btnModificarActionPerformed

    /**
     * Llama a la interfaz para la visualización de los registros
     * @param evt 
     */
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        new FamiliaresRegistros().setVisible(true);
    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     * Llama al método cambiar estado.
     * @param evt 
     */
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
       cambiarEstado();
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * Limpia todos los campos, asignandoles el valor por defecto.
     * @param evt 
     */
    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        txtIdFamiliar.setEnabled(true);
        txtIdFamiliar.setText("");
        jcParentesco.setEnabled(true);
        jcParentesco.setSelectedIndex(0);
        txtNombre.setEnabled(true);
        txtNombre.setText("");
        txtApellido1.setEnabled(true);
        txtApellido1.setText("");
        txtApellido2.setEnabled(true);
        txtApellido2.setText("");
        FechaN.setEnabled(true);
        FechaN.setDate(new Date());
        FechaN.getDateEditor().setEnabled(false);
        jcEPS.setEnabled(true);
        jcEPS.setSelectedIndex(0);
        txtTelefono.setEnabled(true);
        txtTelefono.setText("");
        txtCelular.setEnabled(true);
        txtCelular.setText("");
        jcDepartamento.setEnabled(true);
        jcDepartamento.setSelectedIndex(0);
        jcMunicipio.setEnabled(true);
        jcMunicipio.removeAllItems();
        jcMunicipio.addItem("Seleccione");
        txtBarrio.setEnabled(true);
        txtBarrio.setText("");
        txtDireccion.setEnabled(true);
        txtDireccion.setText("");
        txtGrFamiliar.setText("");
        btnGrFamiliar.setEnabled(true);
        if (InicioSesion.r.equals("2")) {
            btnCrear.setEnabled(false);
        }else{
            btnCrear.setEnabled(true);
        }
        btnEliminar.setEnabled(false);
        btnEliminar.setText("Deshabilitar");
        btnEliminar.setIcon(new ImageIcon(getClass().getResource("/Imagenes/disable-icon.png")));
        btnModificar.setEnabled(false);
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void txtCelularKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCelularKeyTyped
        try {
            int num = Integer.parseInt("" + evt.getKeyChar());

        } catch (Exception ev) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCelularKeyTyped

    /**
     * Cierra la interfaz y regresa al menú principal.
     * @param evt 
     */
    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        new Menu().setVisible(true);
        this.hide();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void jcTipoDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcTipoDocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcTipoDocActionPerformed

    private void txtTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyTyped
        try {
            int num = Integer.parseInt("" + evt.getKeyChar());

        } catch (Exception ev) {
            evt.consume();
        }
    }//GEN-LAST:event_txtTelefonoKeyTyped

    /**
     * Carga los municipios correspondientes al departamento seleccionado
     * @param evt 
     */
    private void jcDepartamentoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcDepartamentoItemStateChanged
        String departamento = "Seleccione";
        jcMunicipio.removeAllItems();
        jcMunicipio.addItem("Seleccione");
        for (Map.Entry<Integer, String> dep : d.entrySet()){
            int d = dep.getKey();
            if (jcDepartamento.getSelectedItem().toString().equals(dep.getValue())) {
                departamento = String.valueOf(d);
            }
        }
        if(!departamento.equals("Seleccione")){
            try {
                m = OpFamiliares.obtenerMunicipios(departamento);
                Iterator mun = m.keySet().iterator();
                while(mun.hasNext()){
                    jcMunicipio.addItem(m.get(mun.next()));
                }
            } catch (SQLException ex) {
                Logger.getLogger(Familiares.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            jcMunicipio.removeAllItems();
            jcMunicipio.addItem("Seleccione");
        }
    }//GEN-LAST:event_jcDepartamentoItemStateChanged
    /**
     * Llama a la ventana para la administración del grupo familiar
     * @param evt 
     */
    private void btnGrFamiliarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrFamiliarActionPerformed
        new GrupoFamiliar().setVisible(true);
    }//GEN-LAST:event_btnGrFamiliarActionPerformed

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Familiares().setVisible(true);
            }
        });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static com.toedter.calendar.JDateChooser FechaN;
    private javax.swing.JButton btnBuscar;
    public static javax.swing.JButton btnCrear;
    public static javax.swing.JButton btnEliminar;
    public static javax.swing.JButton btnGrFamiliar;
    private javax.swing.JButton btnLimpiar;
    public static javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    public static javax.swing.JComboBox jcDepartamento;
    public static javax.swing.JComboBox jcEPS;
    public static javax.swing.JComboBox jcMunicipio;
    public static javax.swing.JComboBox jcParentesco;
    private javax.swing.JComboBox jcTipoDoc;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private javax.swing.JLabel labelAp1;
    private javax.swing.JLabel labelAp2;
    private javax.swing.JLabel labelBarrio;
    private javax.swing.JLabel labelCelular;
    private javax.swing.JLabel labelDepartamento;
    private javax.swing.JLabel labelDireccion;
    private javax.swing.JLabel labelEps;
    private javax.swing.JLabel labelFechaN;
    private javax.swing.JLabel labelGrFamiliar;
    private javax.swing.JLabel labelMunicipio;
    private javax.swing.JLabel labelNDoc;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JLabel labelObligatorios;
    private javax.swing.JLabel labelParentesco;
    private javax.swing.JLabel labelTelefono;
    private javax.swing.JLabel labelTitulo;
    private java.awt.TextField textField1;
    private java.awt.TextField textField2;
    private java.awt.TextField textField3;
    private java.awt.TextField textField4;
    private java.awt.TextField textField5;
    private java.awt.TextField textField6;
    public static java.awt.TextField txtApellido1;
    public static java.awt.TextField txtApellido2;
    public static java.awt.TextField txtBarrio;
    public static java.awt.TextField txtCelular;
    public static java.awt.TextField txtDireccion;
    public static java.awt.TextField txtGrFamiliar;
    public static java.awt.TextField txtIdFamiliar;
    public static java.awt.TextField txtNombre;
    public static java.awt.TextField txtTelefono;
    // End of variables declaration//GEN-END:variables
   
    /**
     * Método que permite guardar la información de un familiar
     * con base en los datos ingresados.
     */
    public void guardar(){
        try {
            String Id, Parentesco = "Seleccione", Nombre, Apellido1, Apellido2, diaFechaNacimiento, mesFechaNacimiento, annoFechaNacimiento, fechaNacimiento, Eps = "Seleccione", Telefono, Celular, Departamento = "Seleccione", Municipio = "Seleccione", Barrio, Direccion, GrupoFamiliar = null;
            Id = txtIdFamiliar.getText();
            
            for (Map.Entry<Integer, String> parentescos : td.entrySet()){
                int td = parentescos.getKey();
                if (jcParentesco.getSelectedItem().toString().equals(parentescos.getValue())) {
                    Parentesco = String.valueOf(td);
                }
            }   
            Nombre = txtNombre.getText();
            Apellido1 = txtApellido1.getText();
            Apellido2 = txtApellido2.getText();
            
            for (Map.Entry<Integer, String> eps : e.entrySet()){
                int e = eps.getKey();
                if (jcEPS.getSelectedItem().toString().equals(eps.getValue())) {
                    Eps = String.valueOf(e);
                }
            }   
            Telefono = txtTelefono.getText();
            Celular = txtCelular.getText();
            
            for (Map.Entry<Integer, String> dep : d.entrySet()){
                int d = dep.getKey();
                if (jcDepartamento.getSelectedItem().toString().equals(dep.getValue())) {
                    Departamento = String.valueOf(d);
                }
            }   
            if (!"Seleccione".equals(jcMunicipio.getSelectedItem().toString())) {
                for (Map.Entry<Integer, String> mun : m.entrySet()){
                    int m = mun.getKey();
                    if (jcMunicipio.getSelectedItem().toString().equals(mun.getValue())) {
                        Municipio = String.valueOf(m);
                    }
                }
            }   
            Barrio = txtBarrio.getText().toString();
            Direccion = txtDireccion.getText();
            
            TreeMap<Integer, String> gf = OpFamiliares.obtenerGrupoFamiliar();
            for (Map.Entry<Integer, String> familiar : gf.entrySet()){
                int grupfam = familiar.getKey();
                if (txtGrFamiliar.getText().equals(familiar.getValue())) {
                    GrupoFamiliar = String.valueOf(grupfam);
                }
            }   
            if(FechaN.getDate() != null){
                diaFechaNacimiento = String.valueOf(FechaN.getCalendar().get(Calendar.DAY_OF_MONTH));
                mesFechaNacimiento = String.valueOf(FechaN.getCalendar().get(Calendar.MONTH) + 1);
                annoFechaNacimiento = String.valueOf(FechaN.getCalendar().get(Calendar.YEAR));
                fechaNacimiento = diaFechaNacimiento + "/" + mesFechaNacimiento + "/" + annoFechaNacimiento;
            }else{
                fechaNacimiento = null;
                
            }   if((Id == null || Id.trim().isEmpty()) || (Parentesco.equals("Seleccione")) || (Nombre == null || Nombre.trim().isEmpty()) || (Apellido1 == null || Apellido1.trim().isEmpty()) || (Eps == null || Eps.trim().isEmpty()) || (Departamento.equals("Seleccione")) || (Municipio.equals("Seleccione")) || (Barrio == null || Barrio.trim().isEmpty()) || (Direccion == null || Direccion.trim().isEmpty()) || (Eps.equals("Seleccione")) || (GrupoFamiliar == null)){
                JOptionPane.showMessageDialog(null, "Se deben diligenciar todos los campos obligatorios", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
            }
            else if(Id.length() > 20 || Id.length() < 4){
                Id = null;
                JOptionPane.showMessageDialog(null, "El campo identificación no debe ser superior a 20 carácteres ni inferior a 4 carácteres", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
            }else if(Id.startsWith("0")){
                Id = null;
                JOptionPane.showMessageDialog(null, "El número de identificación ingresado es inválido", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
            }else if(Telefono.trim().isEmpty() && Celular.trim().isEmpty()){
                Telefono = null;
                Celular = null;
                JOptionPane.showMessageDialog(null, "Debe ingresar un número de teléfono o un celular", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
            }else if(!Telefono.trim().isEmpty() && (Telefono.length() > 7 || Telefono.length() < 7)) {
                Telefono = null;
                JOptionPane.showMessageDialog(null, "El campo teléfono no debe ser superior ni inferior a 7 carácteres", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
            } else if(!Celular.trim().isEmpty() && (Celular.length() > 10 || Celular.length() < 10)) {
                Celular = null;
                JOptionPane.showMessageDialog(null, "El campo celular no debe ser superior ni inferior a 10 carácteres", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
            }else{
                if (fechaNacimiento != null) {
                    Calendar c = Calendar.getInstance();
                    c.setTime(new Date());
                    int diff_anno = c.get(Calendar.YEAR)-FechaN.getCalendar().get(Calendar.YEAR);
                    int diff_mes = (c.get(Calendar.MONTH) + 1) -(FechaN.getCalendar().get(Calendar.MONTH)+ 1);
                    int diff_dia = c.get(Calendar.DATE)-FechaN.getCalendar().get(Calendar.DATE);
                    if(diff_mes<0 ||(diff_mes==0 && diff_dia<0)){
                        diff_anno = diff_anno-1;
                    }
                    if (diff_anno < 18) {
                        fechaNacimiento = null;
                        JOptionPane.showMessageDialog(null, "La fecha de nacimiento del familiar debe ser mayor o igual a 18 años", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
                    }else{
                        int a = OpFamiliares.guardar(Id, Nombre, Apellido1, Apellido2, fechaNacimiento, Eps, Parentesco, Telefono, Celular, Departamento, Municipio, Barrio, Direccion,GrupoFamiliar);
                        if (a == 0) {
                            txtIdFamiliar.enable();
                            txtIdFamiliar.setText("");
                            jcParentesco.setSelectedIndex(0);
                            txtNombre.setText("");
                            txtApellido1.setText("");
                            txtApellido2.setText("");
                            FechaN.setDate(new Date());
                            FechaN.getDateEditor().setEnabled(false);
                            jcEPS.setSelectedIndex(0);
                            txtTelefono.setText("");
                            txtCelular.setText("");
                            jcDepartamento.setSelectedIndex(0);
                            jcMunicipio.removeAllItems();
                            jcMunicipio.addItem("Seleccione");
                            txtBarrio.setText("");     
                            txtDireccion.setText("");
                            txtGrFamiliar.setText("");
                        }
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "La fecha de nacimiento de familiar no es válida", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE); 
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Familiares.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * Método que permite cambiar el estado de un familiar registrado 
     * de acuerdo a la identificación digitada.
     */
    public void cambiarEstado(){
        if(txtIdFamiliar.getText() == null || txtIdFamiliar.getText().trim().isEmpty()){
            txtIdFamiliar.setText(null);
            JOptionPane.showMessageDialog(null, "Se debe diligenciar el campo número de documento a cambiar el estado", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }
        if(!txtIdFamiliar.getText().trim().isEmpty()){
            JOptionPane x = new JOptionPane();
            if(x.showConfirmDialog(null,"Está seguro que desea cambiar el estado de este registro?")==0){
                OpFamiliares.cambiarEstado(txtIdFamiliar.getText());
                txtIdFamiliar.setEnabled(true);
                txtIdFamiliar.setText("");
                jcParentesco.setSelectedIndex(0);
                txtNombre.setEnabled(true);
                txtNombre.setText("");
                txtApellido1.setEnabled(true);
                txtApellido1.setText("");
                txtApellido2.setEnabled(true);
                txtApellido2.setText("");
                FechaN.setEnabled(true);
                FechaN.setDate(new Date());
                FechaN.getDateEditor().setEnabled(false);
                jcEPS.setEnabled(true);
                jcEPS.setSelectedIndex(0);
                txtTelefono.setEnabled(true);
                txtTelefono.setText("");
                txtCelular.setEnabled(true);
                txtCelular.setText("");
                jcDepartamento.setEnabled(true);
                jcDepartamento.setSelectedIndex(0);
                jcMunicipio.setEnabled(true);
                jcMunicipio.removeAllItems();
                jcMunicipio.addItem("Seleccione");
                txtBarrio.setEnabled(true);
                txtBarrio.setText("");
                txtDireccion.setEnabled(true);
                txtDireccion.setText("");
                txtGrFamiliar.setText("");
                btnGrFamiliar.setEnabled(true);
                btnCrear.setEnabled(true);
                btnModificar.setEnabled(false);
                btnEliminar.setEnabled(false);
                btnEliminar.setText("Deshabilitar");
                btnEliminar.setIcon(new ImageIcon(getClass().getResource("/Imagenes/disable-icon.png")));
            }
        }
    }
    
    /**
     * Método que permite modificar la información de un familiar de acuerdo 
     * a la información digitada.
     */
    public void modificar(){
        String Id, Parentesco = "Seleccione", Nombre, Apellido1, Apellido2, diaFechaNacimiento, mesFechaNacimiento, annoFechaNacimiento, fechaNacimiento, Eps = "Seleccione", Telefono, Celular, Departamento = "Seleccione", Municipio = "Seleccione", Barrio, Direccion;

        Id = txtIdFamiliar.getText();

        for (Map.Entry<Integer, String> parentescos : td.entrySet()){
            int td = parentescos.getKey();
            if (jcParentesco.getSelectedItem().toString().equals(parentescos.getValue())) {
                Parentesco = String.valueOf(td);
            }
        }
        Nombre = txtNombre.getText();
        Apellido1 = txtApellido1.getText();
        Apellido2 = txtApellido2.getText();

        for (Map.Entry<Integer, String> eps : e.entrySet()){
            int e = eps.getKey();
            if (jcEPS.getSelectedItem().toString().equals(eps.getValue())) {
                Eps = String.valueOf(e);
            }
        }
        Telefono = txtTelefono.getText();
        Celular = txtCelular.getText();

        for (Map.Entry<Integer, String> dep : d.entrySet()){
            int d = dep.getKey();
            if (jcDepartamento.getSelectedItem().toString().equals(dep.getValue())) {
                Departamento = String.valueOf(d);
            }
        }

        if (!"Seleccione".equals(jcMunicipio.getSelectedItem().toString())) {
            for (Map.Entry<Integer, String> mun : m.entrySet()){
                int m = mun.getKey();
                if (jcMunicipio.getSelectedItem().toString().equals(mun.getValue())) {
                    Municipio = String.valueOf(m);
                }
            }
        }
        Barrio = txtBarrio.getText().toString();
        Direccion = txtDireccion.getText();

        if(FechaN.getDate() != null){
            diaFechaNacimiento = String.valueOf(FechaN.getCalendar().get(Calendar.DAY_OF_MONTH));
            mesFechaNacimiento = String.valueOf(FechaN.getCalendar().get(Calendar.MONTH) + 1);
            annoFechaNacimiento = String.valueOf(FechaN.getCalendar().get(Calendar.YEAR));
            fechaNacimiento = diaFechaNacimiento + "/" + mesFechaNacimiento + "/" + annoFechaNacimiento;
        }else{
            fechaNacimiento = null;
        }

        if((Id == null || Id.trim().isEmpty()) || (Parentesco.equals("Seleccione")) || (Nombre == null || Nombre.trim().isEmpty()) || (Apellido1 == null || Apellido1.trim().isEmpty()) || (Eps == null || Eps.trim().isEmpty()) || (Departamento.equals("Seleccione")) || (Municipio.equals("Seleccione")) || (Barrio == null || Barrio.trim().isEmpty()) || (Direccion == null || Direccion.trim().isEmpty())){
            JOptionPane.showMessageDialog(null, "Se deben diligenciar todos los campos obligatorios", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }
        else if(Id.length() > 20 || Id.length() < 4){
            Id = null;
            JOptionPane.showMessageDialog(null, "El campo identificación no debe ser superior a 20 carácteres ni inferior a 4 carácteres", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }else if(Telefono.trim().isEmpty() && Celular.trim().isEmpty()){
            Telefono = null;
            Celular = null;
            JOptionPane.showMessageDialog(null, "Debe ingresar un número de teléfono o un celular", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }else if(!Telefono.trim().isEmpty() && (Telefono.length() > 7 || Telefono.length() < 7)) {
            Telefono = null;
            JOptionPane.showMessageDialog(null, "El campo teléfono no debe ser superior ni inferior a 7 carácteres", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        } else if(!Celular.trim().isEmpty() && (Celular.length() > 10 || Celular.length() < 10)) {
            Celular = null;
            JOptionPane.showMessageDialog(null, "El campo celular no debe ser superior ni inferior a 10 carácteres", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }else if (fechaNacimiento != null) {
            Calendar c = Calendar.getInstance();
            c.setTime(new Date());
            int diff_anno = c.get(Calendar.YEAR)-FechaN.getCalendar().get(Calendar.YEAR);
            int diff_mes = (c.get(Calendar.MONTH) + 1) -(FechaN.getCalendar().get(Calendar.MONTH)+ 1);
            int diff_dia = c.get(Calendar.DATE)-FechaN.getCalendar().get(Calendar.DATE);
            if(diff_mes<0 ||(diff_mes==0 && diff_dia<0)){
                diff_anno = diff_anno-1;
            }
            if (diff_anno < 18) {
                fechaNacimiento = null;
                JOptionPane.showMessageDialog(null, "La fecha de nacimiento del familiar debe ser mayor o igual a 18 años", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
            }else{
                OpFamiliares.modificar(Id, Nombre, Apellido1, Apellido2, fechaNacimiento, Eps, Parentesco, Telefono, Celular, Departamento, Municipio, Barrio, Direccion);
                txtIdFamiliar.enable();
                txtIdFamiliar.setText("");
                jcParentesco.setSelectedIndex(0);
                txtNombre.setText("");
                txtApellido1.setText("");
                txtApellido2.setText("");
                FechaN.setDate(new Date());
                FechaN.getDateEditor().setEnabled(false);
                jcEPS.setSelectedIndex(0);
                txtTelefono.setText("");
                txtCelular.setText("");
                jcDepartamento.setSelectedIndex(0);
                jcMunicipio.removeAllItems();
                jcMunicipio.addItem("Seleccione");
                txtBarrio.setText("");     
                txtDireccion.setText("");
                txtGrFamiliar.setText("");
                btnGrFamiliar.setEnabled(true);
                btnCrear.setEnabled(true);
                btnModificar.setEnabled(false);
                btnEliminar.setEnabled(false);
                btnEliminar.setText("Deshabilitar");
                btnEliminar.setIcon(new ImageIcon(getClass().getResource("/Imagenes/disable-icon.png")));
            }
        }else{
            JOptionPane.showMessageDialog(null, "La fecha de nacimiento de familiar no es válida", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }
    } 
}
