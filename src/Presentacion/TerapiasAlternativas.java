/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import AccesoDatos.OpTerapiasAlternativas;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.Map;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 * Esta clase permite pintar la ventana Terapias Alternativas, con sus respectivos componentes, 
 * para el manejo de la información de la terapia alternativa (Equinoterapia y Educación Especial)
 * @author Cristian A. Hoyos Jaramillo
 * @author Daniela Estrada Monsalve
 * @author Yeisson A. Ochoa Villa
 */
public class TerapiasAlternativas extends javax.swing.JFrame {
    Map<String, String> pr;
    Map<String, String> c;
    Map<Integer, String> p;
    TreeMap<Integer, String> td;
    
    public TerapiasAlternativas() {
        try {
            initComponents();
            setIconImage (new ImageIcon(getClass().getResource("/Imagenes/alternative therapies icon.png")).getImage());
            jxtpEvalFac.add(jpanelEvalFac);
            jxtpAyudMont.add(jpanelAyudMont);
            jxtpManejoEjer.add(jpanelManejoEjer);
            jxtpObservaciones.add(jpanelObs);
            FechaEquinoterapia.setDate(new Date());
            td = OpTerapiasAlternativas.obtenerTerapias();
            Iterator t = td.keySet().iterator();
            while(t.hasNext()){
                jcTerapia.addItem(td.get(t.next()));
            }
        } catch (SQLException ex) {
            Logger.getLogger(TerapiasAlternativas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpanelEvalFac = new javax.swing.JPanel();
        jcPostPaso = new javax.swing.JComboBox();
        labelPelvis = new javax.swing.JLabel();
        jcPelvis = new javax.swing.JComboBox();
        labelPosturaPaso = new javax.swing.JLabel();
        labelCodos = new javax.swing.JLabel();
        jcPostGalope = new javax.swing.JComboBox();
        labelPosturaGalope = new javax.swing.JLabel();
        labelPiernas = new javax.swing.JLabel();
        labelManos = new javax.swing.JLabel();
        jcAsientoProf = new javax.swing.JComboBox();
        jcPostTrote = new javax.swing.JComboBox();
        labelCabeza = new javax.swing.JLabel();
        jcCodos = new javax.swing.JComboBox();
        jcAsientoLig = new javax.swing.JComboBox();
        jcPiernas = new javax.swing.JComboBox();
        labelTronco = new javax.swing.JLabel();
        labelAsientoProf = new javax.swing.JLabel();
        labelPies = new javax.swing.JLabel();
        labelPosturaTrote = new javax.swing.JLabel();
        jcCabeza = new javax.swing.JComboBox();
        jcManos = new javax.swing.JComboBox();
        jcTronco = new javax.swing.JComboBox();
        jcPies = new javax.swing.JComboBox();
        labelBrazos = new javax.swing.JLabel();
        labelAsientoLig = new javax.swing.JLabel();
        jcBrazos = new javax.swing.JComboBox();
        jpanelAyudMont = new javax.swing.JPanel();
        labelAyudMontPelvis = new javax.swing.JLabel();
        jcMMontPelvis = new javax.swing.JComboBox();
        labelAyudMontPiernas = new javax.swing.JLabel();
        jcMMontPiernas = new javax.swing.JComboBox();
        labelAyudMontManos = new javax.swing.JLabel();
        jcMMontManos = new javax.swing.JComboBox();
        labelAyudMontAsientoProf = new javax.swing.JLabel();
        jcAsientFlexion = new javax.swing.JComboBox();
        jpanelManejoEjer = new javax.swing.JPanel();
        labelSalidasTrote = new javax.swing.JLabel();
        jcSalidTrote = new javax.swing.JComboBox();
        labelSalidasGalopeTr = new javax.swing.JLabel();
        jcSalidGalopeTr = new javax.swing.JComboBox();
        labelSalidasGalopePaso = new javax.swing.JLabel();
        jcSalidGalopePaso = new javax.swing.JComboBox();
        labelAltoPaso = new javax.swing.JLabel();
        jcAltoPaso = new javax.swing.JComboBox();
        labelAltoTrote = new javax.swing.JLabel();
        jcAltoTrote = new javax.swing.JComboBox();
        labelAltoGalope = new javax.swing.JLabel();
        jcAltoGalope = new javax.swing.JComboBox();
        labelCirculos = new javax.swing.JLabel();
        jcCirculos = new javax.swing.JComboBox();
        labelSerpentinas = new javax.swing.JLabel();
        jcSerpentinas = new javax.swing.JComboBox();
        labelApoyos = new javax.swing.JLabel();
        jcApoyos = new javax.swing.JComboBox();
        labelEquilibrio = new javax.swing.JLabel();
        jcEquilibrio = new javax.swing.JComboBox();
        labelFlexibilidad = new javax.swing.JLabel();
        jcFlexibilidad = new javax.swing.JComboBox();
        labelCoordPsicomotriz = new javax.swing.JLabel();
        jcCoordPsicomotriz = new javax.swing.JComboBox();
        labelFuerzaMusc = new javax.swing.JLabel();
        jcFuerzaMusc = new javax.swing.JComboBox();
        labelManejoEsp = new javax.swing.JLabel();
        jcManejoEsp = new javax.swing.JComboBox();
        jpanelObs = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObservaciones = new javax.swing.JTextArea();
        labelObservaciones = new javax.swing.JLabel();
        labelFecha = new javax.swing.JLabel();
        FechaEquinoterapia = new com.toedter.calendar.JDateChooser();
        labelDoc = new javax.swing.JLabel();
        jcCaballo = new javax.swing.JComboBox();
        labelCodCaballo = new javax.swing.JLabel();
        btnCrearTerapiaAlternativa = new javax.swing.JButton();
        btnLimpiarTerapiaAlternativa = new javax.swing.JButton();
        btnSalirTerapiaAlternativa = new javax.swing.JButton();
        btnBuscarTerapiaAlternativa = new javax.swing.JButton();
        txtDocCab = new java.awt.TextField();
        btnBusqueda = new javax.swing.JButton();
        labelProfesional = new javax.swing.JLabel();
        txtDocProf = new java.awt.TextField();
        btnBusquedaProf = new javax.swing.JButton();
        jcProfesional = new javax.swing.JComboBox();
        labelTitulo = new javax.swing.JLabel();
        labelObligatorios = new javax.swing.JLabel();
        jXTaskPaneContainer1 = new org.jdesktop.swingx.JXTaskPaneContainer();
        jxtpEvalFac = new org.jdesktop.swingx.JXTaskPane();
        jxtpAyudMont = new org.jdesktop.swingx.JXTaskPane();
        jxtpManejoEjer = new org.jdesktop.swingx.JXTaskPane();
        jxtpObservaciones = new org.jdesktop.swingx.JXTaskPane();
        txtDocPac = new java.awt.TextField();
        btnBusquedaPac = new javax.swing.JButton();
        jcPaciente = new javax.swing.JComboBox();
        jcTerapia = new javax.swing.JComboBox();
        labelTerapiaAlt = new javax.swing.JLabel();
        labelNHistoriaClinica = new javax.swing.JLabel();
        txtNHC = new java.awt.TextField();
        jLabel1 = new javax.swing.JLabel();

        jpanelEvalFac.setMinimumSize(new java.awt.Dimension(1121, 317));
        jpanelEvalFac.setPreferredSize(new java.awt.Dimension(1121, 317));
        jpanelEvalFac.setLayout(null);

        jcPostPaso.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Muy bien", "Bien", "Deficiente", "Muy deficiente" }));
        jpanelEvalFac.add(jcPostPaso);
        jcPostPaso.setBounds(210, 30, 140, 27);

        labelPelvis.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelPelvis.setText("Pelvis*");
        jpanelEvalFac.add(labelPelvis);
        labelPelvis.setBounds(30, 230, 41, 15);

        jcPelvis.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Flexible", "Echada hacia atrás", "Echada hacia adelante", "Rotada", "Tiesa" }));
        jpanelEvalFac.add(jcPelvis);
        jcPelvis.setBounds(210, 230, 140, 27);

        labelPosturaPaso.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelPosturaPaso.setText("Postura Paso*");
        jpanelEvalFac.add(labelPosturaPaso);
        labelPosturaPaso.setBounds(30, 30, 90, 15);

        labelCodos.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelCodos.setText("Codos*");
        jpanelEvalFac.add(labelCodos);
        labelCodos.setBounds(30, 190, 45, 15);

        jcPostGalope.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Muy bien", "Bien", "Deficiente", "Muy deficiente" }));
        jpanelEvalFac.add(jcPostGalope);
        jcPostGalope.setBounds(210, 70, 140, 27);

        labelPosturaGalope.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelPosturaGalope.setText("Postura Galope*");
        jpanelEvalFac.add(labelPosturaGalope);
        labelPosturaGalope.setBounds(30, 70, 103, 15);

        labelPiernas.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelPiernas.setText("Piernas*");
        jpanelEvalFac.add(labelPiernas);
        labelPiernas.setBounds(660, 230, 53, 15);

        labelManos.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelManos.setText("Manos*");
        jpanelEvalFac.add(labelManos);
        labelManos.setBounds(660, 190, 47, 15);

        jcAsientoProf.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Muy bien", "Bien", "Deficiente", "Muy deficiente" }));
        jpanelEvalFac.add(jcAsientoProf);
        jcAsientoProf.setBounds(840, 70, 140, 27);

        jcPostTrote.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Muy bien", "Bien", "Deficiente", "Muy deficiente" }));
        jpanelEvalFac.add(jcPostTrote);
        jcPostTrote.setBounds(840, 30, 140, 27);

        labelCabeza.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelCabeza.setText("Cabeza*");
        jpanelEvalFac.add(labelCabeza);
        labelCabeza.setBounds(30, 150, 51, 15);

        jcCodos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Doblados", "Estirados", "Abiertos", "Apretados" }));
        jpanelEvalFac.add(jcCodos);
        jcCodos.setBounds(210, 190, 140, 27);

        jcAsientoLig.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Muy bien", "Bien", "Deficiente", "Muy deficiente" }));
        jpanelEvalFac.add(jcAsientoLig);
        jcAsientoLig.setBounds(210, 110, 140, 27);

        jcPiernas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Correctas", "Adelante", "Atrás", "Inquietas", "Tensas", "Débiles" }));
        jpanelEvalFac.add(jcPiernas);
        jcPiernas.setBounds(840, 230, 140, 27);

        labelTronco.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelTronco.setText("Tronco*");
        jpanelEvalFac.add(labelTronco);
        labelTronco.setBounds(660, 110, 49, 15);

        labelAsientoProf.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelAsientoProf.setText("Asiento Profundo*");
        jpanelEvalFac.add(labelAsientoProf);
        labelAsientoProf.setBounds(660, 70, 114, 15);

        labelPies.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelPies.setText("Pies*");
        jpanelEvalFac.add(labelPies);
        labelPies.setBounds(30, 270, 32, 15);

        labelPosturaTrote.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelPosturaTrote.setText("Postura Trote*");
        jpanelEvalFac.add(labelPosturaTrote);
        labelPosturaTrote.setBounds(660, 30, 92, 15);

        jcCabeza.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Recta", "Adelante", "Atrás", "Ladeada", "Rotada" }));
        jpanelEvalFac.add(jcCabeza);
        jcCabeza.setBounds(210, 150, 140, 27);

        jcManos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Correctas", "Volteadas", "Quebradas", "Abiertas", "Inquietas", "Altas" }));
        jpanelEvalFac.add(jcManos);
        jcManos.setBounds(840, 190, 140, 27);

        jcTronco.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Recto", "Encorvado cifósico", "Encorvado lordósico", "Rotado" }));
        jpanelEvalFac.add(jcTronco);
        jcTronco.setBounds(840, 110, 140, 27);

        jcPies.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Correctos", "Volteados", "Punta colgada", "Abierta", "Cerrada" }));
        jpanelEvalFac.add(jcPies);
        jcPies.setBounds(210, 270, 140, 27);

        labelBrazos.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelBrazos.setText("Brazos*");
        jpanelEvalFac.add(labelBrazos);
        labelBrazos.setBounds(660, 150, 47, 15);

        labelAsientoLig.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelAsientoLig.setText("Asiento Ligero*");
        jpanelEvalFac.add(labelAsientoLig);
        labelAsientoLig.setBounds(30, 110, 95, 15);

        jcBrazos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Correctos", "Estirados", "Tensos", "Se mueven" }));
        jpanelEvalFac.add(jcBrazos);
        jcBrazos.setBounds(840, 150, 140, 27);

        jpanelAyudMont.setMinimumSize(new java.awt.Dimension(1121, 150));
        jpanelAyudMont.setPreferredSize(new java.awt.Dimension(1121, 150));
        jpanelAyudMont.setLayout(null);

        labelAyudMontPelvis.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelAyudMontPelvis.setText("Pelvis*");
        jpanelAyudMont.add(labelAyudMontPelvis);
        labelAyudMontPelvis.setBounds(30, 30, 41, 15);

        jcMMontPelvis.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Flexible", "Rígida" }));
        jpanelAyudMont.add(jcMMontPelvis);
        jcMMontPelvis.setBounds(210, 30, 140, 27);

        labelAyudMontPiernas.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelAyudMontPiernas.setText("Piernas*");
        jpanelAyudMont.add(labelAyudMontPiernas);
        labelAyudMontPiernas.setBounds(670, 30, 53, 15);

        jcMMontPiernas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Uso correcto", "Uso incorrecto" }));
        jpanelAyudMont.add(jcMMontPiernas);
        jcMMontPiernas.setBounds(850, 30, 140, 27);

        labelAyudMontManos.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelAyudMontManos.setText("Manos*");
        jpanelAyudMont.add(labelAyudMontManos);
        labelAyudMontManos.setBounds(30, 70, 47, 15);

        jcMMontManos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Uso correcto", "Uso incorrecto" }));
        jpanelAyudMont.add(jcMMontManos);
        jcMMontManos.setBounds(210, 70, 140, 27);

        labelAyudMontAsientoProf.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelAyudMontAsientoProf.setText("Asiento profundo*");
        jpanelAyudMont.add(labelAyudMontAsientoProf);
        labelAyudMontAsientoProf.setBounds(670, 70, 110, 15);

        jcAsientFlexion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Sí", "No" }));
        jpanelAyudMont.add(jcAsientFlexion);
        jcAsientFlexion.setBounds(850, 70, 140, 27);

        jpanelManejoEjer.setMinimumSize(new java.awt.Dimension(1121, 310));
        jpanelManejoEjer.setPreferredSize(new java.awt.Dimension(1121, 310));
        jpanelManejoEjer.setLayout(null);

        labelSalidasTrote.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelSalidasTrote.setText("Salidas al trote*");
        jpanelManejoEjer.add(labelSalidasTrote);
        labelSalidasTrote.setBounds(30, 20, 100, 15);

        jcSalidTrote.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Correcto", "Incorrecto" }));
        jpanelManejoEjer.add(jcSalidTrote);
        jcSalidTrote.setBounds(210, 20, 140, 27);

        labelSalidasGalopeTr.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelSalidasGalopeTr.setText("Salidas al Galope del Trote*");
        jpanelManejoEjer.add(labelSalidasGalopeTr);
        labelSalidasGalopeTr.setBounds(670, 20, 170, 15);

        jcSalidGalopeTr.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Correcto", "Incorrecto" }));
        jpanelManejoEjer.add(jcSalidGalopeTr);
        jcSalidGalopeTr.setBounds(850, 20, 140, 27);

        labelSalidasGalopePaso.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelSalidasGalopePaso.setText("Salidas al Galope del Paso*");
        jpanelManejoEjer.add(labelSalidasGalopePaso);
        labelSalidasGalopePaso.setBounds(30, 60, 170, 15);

        jcSalidGalopePaso.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Correcto", "Incorrecto" }));
        jpanelManejoEjer.add(jcSalidGalopePaso);
        jcSalidGalopePaso.setBounds(210, 60, 140, 27);

        labelAltoPaso.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelAltoPaso.setText("Alto al paso*");
        jpanelManejoEjer.add(labelAltoPaso);
        labelAltoPaso.setBounds(670, 60, 100, 15);

        jcAltoPaso.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Correcto", "Incorrecto" }));
        jpanelManejoEjer.add(jcAltoPaso);
        jcAltoPaso.setBounds(850, 60, 140, 27);

        labelAltoTrote.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelAltoTrote.setText("Alto al trote*");
        jpanelManejoEjer.add(labelAltoTrote);
        labelAltoTrote.setBounds(30, 100, 100, 15);

        jcAltoTrote.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Correcto", "Incorrecto" }));
        jpanelManejoEjer.add(jcAltoTrote);
        jcAltoTrote.setBounds(210, 100, 140, 27);

        labelAltoGalope.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelAltoGalope.setText("Alto del galope*");
        jpanelManejoEjer.add(labelAltoGalope);
        labelAltoGalope.setBounds(670, 100, 100, 15);

        jcAltoGalope.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Correcto", "Incorrecto" }));
        jpanelManejoEjer.add(jcAltoGalope);
        jcAltoGalope.setBounds(850, 100, 140, 27);

        labelCirculos.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelCirculos.setText("Círculos*");
        jpanelManejoEjer.add(labelCirculos);
        labelCirculos.setBounds(30, 140, 100, 15);

        jcCirculos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Correcto", "Incorrecto" }));
        jpanelManejoEjer.add(jcCirculos);
        jcCirculos.setBounds(210, 140, 140, 27);

        labelSerpentinas.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelSerpentinas.setText("Serpentinas*");
        jpanelManejoEjer.add(labelSerpentinas);
        labelSerpentinas.setBounds(670, 140, 100, 15);

        jcSerpentinas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Correcto", "Incorrecto" }));
        jpanelManejoEjer.add(jcSerpentinas);
        jcSerpentinas.setBounds(850, 140, 140, 27);

        labelApoyos.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelApoyos.setText("Apoyos*");
        jpanelManejoEjer.add(labelApoyos);
        labelApoyos.setBounds(30, 180, 100, 15);

        jcApoyos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Correcto", "Incorrecto" }));
        jpanelManejoEjer.add(jcApoyos);
        jcApoyos.setBounds(210, 180, 140, 27);

        labelEquilibrio.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelEquilibrio.setText("Equilibrio*");
        jpanelManejoEjer.add(labelEquilibrio);
        labelEquilibrio.setBounds(670, 180, 100, 15);

        jcEquilibrio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Bueno", "Regular", "Insuficiente" }));
        jpanelManejoEjer.add(jcEquilibrio);
        jcEquilibrio.setBounds(850, 180, 140, 27);

        labelFlexibilidad.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelFlexibilidad.setText("Flexibilidad*");
        jpanelManejoEjer.add(labelFlexibilidad);
        labelFlexibilidad.setBounds(30, 220, 100, 15);

        jcFlexibilidad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Bueno", "Regular", "Insuficiente" }));
        jpanelManejoEjer.add(jcFlexibilidad);
        jcFlexibilidad.setBounds(210, 220, 140, 27);

        labelCoordPsicomotriz.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelCoordPsicomotriz.setText("Coordinación psicomotriz*");
        jpanelManejoEjer.add(labelCoordPsicomotriz);
        labelCoordPsicomotriz.setBounds(670, 220, 160, 15);

        jcCoordPsicomotriz.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Bueno", "Regular", "Insuficiente" }));
        jpanelManejoEjer.add(jcCoordPsicomotriz);
        jcCoordPsicomotriz.setBounds(850, 220, 140, 27);

        labelFuerzaMusc.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelFuerzaMusc.setText("Fuerza muscular*");
        jpanelManejoEjer.add(labelFuerzaMusc);
        labelFuerzaMusc.setBounds(30, 260, 110, 15);

        jcFuerzaMusc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Suficiente", "Insuficiente" }));
        jpanelManejoEjer.add(jcFuerzaMusc);
        jcFuerzaMusc.setBounds(210, 260, 140, 27);

        labelManejoEsp.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelManejoEsp.setText("Manejo del espacio*");
        jpanelManejoEjer.add(labelManejoEsp);
        labelManejoEsp.setBounds(670, 260, 120, 15);

        jcManejoEsp.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Correcto", "Incorrecto" }));
        jpanelManejoEjer.add(jcManejoEsp);
        jcManejoEsp.setBounds(850, 260, 140, 27);

        jpanelObs.setMinimumSize(new java.awt.Dimension(1121, 120));
        jpanelObs.setPreferredSize(new java.awt.Dimension(1121, 120));
        jpanelObs.setLayout(null);

        txtObservaciones.setColumns(20);
        txtObservaciones.setRows(5);
        jScrollPane1.setViewportView(txtObservaciones);

        jpanelObs.add(jScrollPane1);
        jScrollPane1.setBounds(200, 20, 840, 60);

        labelObservaciones.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelObservaciones.setText("Observaciones*");
        jpanelObs.add(labelObservaciones);
        labelObservaciones.setBounds(20, 20, 120, 15);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Terapias Alternativas");
        setMinimumSize(new java.awt.Dimension(1230, 735));
        setResizable(false);
        getContentPane().setLayout(null);

        labelFecha.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelFecha.setText("*Fecha:");
        getContentPane().add(labelFecha);
        labelFecha.setBounds(20, 100, 120, 15);

        FechaEquinoterapia.setDateFormatString("dd-MM-yyyy");
        FechaEquinoterapia.setEnabled(false);
        FechaEquinoterapia.setName("FechaN"); // NOI18N
        getContentPane().add(FechaEquinoterapia);
        FechaEquinoterapia.setBounds(170, 100, 181, 22);

        labelDoc.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelDoc.setText("*Documento Paciente:");
        getContentPane().add(labelDoc);
        labelDoc.setBounds(20, 140, 141, 15);

        jcCaballo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        getContentPane().add(jcCaballo);
        jcCaballo.setBounds(1030, 140, 170, 27);

        labelCodCaballo.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelCodCaballo.setText("*Registro del Caballo:");
        getContentPane().add(labelCodCaballo);
        labelCodCaballo.setBounds(670, 140, 120, 13);

        btnCrearTerapiaAlternativa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/add.png"))); // NOI18N
        btnCrearTerapiaAlternativa.setText("Crear");
        btnCrearTerapiaAlternativa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearTerapiaAlternativaActionPerformed(evt);
            }
        });
        getContentPane().add(btnCrearTerapiaAlternativa);
        btnCrearTerapiaAlternativa.setBounds(150, 670, 130, 34);

        btnLimpiarTerapiaAlternativa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Actions-edit-clear-icon.png"))); // NOI18N
        btnLimpiarTerapiaAlternativa.setText("Limpiar");
        btnLimpiarTerapiaAlternativa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarTerapiaAlternativaActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpiarTerapiaAlternativa);
        btnLimpiarTerapiaAlternativa.setBounds(630, 670, 137, 34);

        btnSalirTerapiaAlternativa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Log-Out-icon.png"))); // NOI18N
        btnSalirTerapiaAlternativa.setText("Salir");
        btnSalirTerapiaAlternativa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirTerapiaAlternativaActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalirTerapiaAlternativa);
        btnSalirTerapiaAlternativa.setBounds(890, 670, 137, 34);

        btnBuscarTerapiaAlternativa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/search.png"))); // NOI18N
        btnBuscarTerapiaAlternativa.setText("Buscar");
        btnBuscarTerapiaAlternativa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarTerapiaAlternativaActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscarTerapiaAlternativa);
        btnBuscarTerapiaAlternativa.setBounds(390, 670, 125, 34);

        txtDocCab.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtDocCab);
        txtDocCab.setBounds(820, 140, 140, 19);

        btnBusqueda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/search.png"))); // NOI18N
        btnBusqueda.setToolTipText("La búsqueda se  puede generar a partir de los primeros dígitos del registro del caballo");
        btnBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBusquedaActionPerformed(evt);
            }
        });
        getContentPane().add(btnBusqueda);
        btnBusqueda.setBounds(970, 130, 50, 30);

        labelProfesional.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelProfesional.setText("*Registro del Profesional:");
        getContentPane().add(labelProfesional);
        labelProfesional.setBounds(20, 180, 140, 13);

        txtDocProf.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtDocProf);
        txtDocProf.setBounds(170, 180, 140, 19);

        btnBusquedaProf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/search.png"))); // NOI18N
        btnBusquedaProf.setToolTipText("La búsqueda se  puede generar a partir de los primeros dífitos del registro del profesional");
        btnBusquedaProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBusquedaProfActionPerformed(evt);
            }
        });
        getContentPane().add(btnBusquedaProf);
        btnBusquedaProf.setBounds(320, 170, 50, 30);

        jcProfesional.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        getContentPane().add(jcProfesional);
        jcProfesional.setBounds(390, 180, 210, 20);

        labelTitulo.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        labelTitulo.setText("TERAPIAS ALTERNATIVAS");
        getContentPane().add(labelTitulo);
        labelTitulo.setBounds(530, 30, 150, 15);

        labelObligatorios.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        labelObligatorios.setText("Los campos con * son obligatorios");
        getContentPane().add(labelObligatorios);
        labelObligatorios.setBounds(500, 60, 210, 15);

        jXTaskPaneContainer1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        org.jdesktop.swingx.VerticalLayout verticalLayout1 = new org.jdesktop.swingx.VerticalLayout();
        verticalLayout1.setGap(14);
        jXTaskPaneContainer1.setLayout(verticalLayout1);

        jxtpEvalFac.setCollapsed(true);
        jxtpEvalFac.setTitle("EVALUACIÓN DE FACULTADES");
        jXTaskPaneContainer1.add(jxtpEvalFac);

        jxtpAyudMont.setCollapsed(true);
        jxtpAyudMont.setTitle("MANEJO DE LAS AYUDAS DE MONTAR");
        jXTaskPaneContainer1.add(jxtpAyudMont);

        jxtpManejoEjer.setCollapsed(true);
        jxtpManejoEjer.setTitle("MANEJO DE EJERCICIOS");
        jXTaskPaneContainer1.add(jxtpManejoEjer);

        jxtpObservaciones.setCollapsed(true);
        jxtpObservaciones.setTitle("OBSERVACIONES");
        jXTaskPaneContainer1.add(jxtpObservaciones);

        getContentPane().add(jXTaskPaneContainer1);
        jXTaskPaneContainer1.setBounds(10, 220, 1200, 450);

        txtDocPac.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtDocPac);
        txtDocPac.setBounds(170, 140, 140, 19);

        btnBusquedaPac.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/search.png"))); // NOI18N
        btnBusquedaPac.setToolTipText("La búsqueda se  puede generar a partir de los primeros números del documento");
        btnBusquedaPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBusquedaPacActionPerformed(evt);
            }
        });
        getContentPane().add(btnBusquedaPac);
        btnBusquedaPac.setBounds(320, 130, 50, 30);

        jcPaciente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        jcPaciente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcPacienteItemStateChanged(evt);
            }
        });
        getContentPane().add(jcPaciente);
        jcPaciente.setBounds(390, 140, 210, 27);

        jcTerapia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        getContentPane().add(jcTerapia);
        jcTerapia.setBounds(820, 180, 180, 27);

        labelTerapiaAlt.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelTerapiaAlt.setText("*Terapia Alternativa:");
        getContentPane().add(labelTerapiaAlt);
        labelTerapiaAlt.setBounds(670, 180, 110, 15);

        labelNHistoriaClinica.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelNHistoriaClinica.setText("*Número Historia Clínica:");
        getContentPane().add(labelNHistoriaClinica);
        labelNHistoriaClinica.setBounds(670, 100, 140, 15);

        txtNHC.setEnabled(false);
        getContentPane().add(txtNHC);
        txtNHC.setBounds(820, 100, 130, 19);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondo.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1220, 720);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Llama al método guardar
     * @param evt 
     */
    private void btnCrearTerapiaAlternativaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearTerapiaAlternativaActionPerformed
        guardarTerapiaAlternativa();
    }//GEN-LAST:event_btnCrearTerapiaAlternativaActionPerformed

    /**
     * Limpia todos los campos del formulario, asignandoles el valor por defecto
     * @param evt 
     */
    private void btnLimpiarTerapiaAlternativaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarTerapiaAlternativaActionPerformed
        FechaEquinoterapia.setDate(new Date());
        txtNHC.setText("");
        jcPaciente.setEnabled(true);
        jcPaciente.removeAllItems();
        jcPaciente.addItem("Seleccione");
        jcPaciente.setSelectedIndex(0);
        jcCaballo.setEnabled(true);
        jcCaballo.removeAllItems();
        jcCaballo.addItem("Seleccione");
        jcCaballo.setSelectedIndex(0);
        jcTerapia.setEnabled(true);
        jcTerapia.setSelectedIndex(0);
        jcPostPaso.setEnabled(true);
        jcPostPaso.setSelectedIndex(0);
        jcPostTrote.setEnabled(true);
        jcPostTrote.setSelectedIndex(0);
        jcPostGalope.setEnabled(true);
        jcPostGalope.setSelectedIndex(0);
        jcAsientoProf.setEnabled(true);
        jcAsientoProf.setSelectedIndex(0);
        jcAsientoLig.setEnabled(true);
        jcAsientoLig.setSelectedIndex(0);
        jcTronco.setEnabled(true);
        jcTronco.setSelectedIndex(0);
        jcCabeza.setEnabled(true);
        jcCabeza.setSelectedIndex(0);
        jcBrazos.setEnabled(true);
        jcBrazos.setSelectedIndex(0);
        jcCodos.setEnabled(true);
        jcCodos.setSelectedIndex(0);
        jcManos.setEnabled(true);
        jcManos.setSelectedIndex(0);
        jcPelvis.setEnabled(true);
        jcPelvis.setSelectedIndex(0);
        jcPiernas.setEnabled(true);
        jcPiernas.setSelectedIndex(0);
        jcPies.setEnabled(true);
        jcPies.setSelectedIndex(0);
        jcMMontPelvis.setEnabled(true);
        jcMMontPelvis.setSelectedIndex(0);
        jcMMontPiernas.setEnabled(true);
        jcMMontPiernas.setSelectedIndex(0);
        jcMMontManos.setEnabled(true);
        jcMMontManos.setSelectedIndex(0);
        jcAsientFlexion.setEnabled(true);
        jcAsientFlexion.setSelectedIndex(0);
        jcSalidTrote.setEnabled(true);
        jcSalidTrote.setSelectedIndex(0);
        jcSalidGalopeTr.setEnabled(true);
        jcSalidGalopeTr.setSelectedIndex(0);
        jcSalidGalopePaso.setEnabled(true);
        jcSalidGalopePaso.setSelectedIndex(0);
        jcAltoPaso.setEnabled(true);
        jcAltoPaso.setSelectedIndex(0);
        jcAltoTrote.setEnabled(true);
        jcAltoTrote.setSelectedIndex(0);
        jcAltoGalope.setEnabled(true);
        jcAltoGalope.setSelectedIndex(0);
        jcCirculos.setEnabled(true);
        jcCirculos.setSelectedIndex(0);
        jcSerpentinas.setEnabled(true);
        jcSerpentinas.setSelectedIndex(0);
        jcApoyos.setEnabled(true);
        jcApoyos.setSelectedIndex(0);
        jcEquilibrio.setEnabled(true);
        jcEquilibrio.setSelectedIndex(0);
        jcFlexibilidad.setEnabled(true);
        jcFlexibilidad.setSelectedIndex(0);
        jcCoordPsicomotriz.setEnabled(true);
        jcCoordPsicomotriz.setSelectedIndex(0);
        jcFuerzaMusc.setEnabled(true);
        jcFuerzaMusc.setSelectedIndex(0);
        jcManejoEsp.setEnabled(true);
        jcManejoEsp.setSelectedIndex(0);
        txtObservaciones.setEnabled(true);
        txtObservaciones.setText("");
        txtDocProf.setEnabled(true);
        btnBusquedaProf.setEnabled(true);
        txtDocCab.setEnabled(true);
        btnBusqueda.setEnabled(true);
        txtDocPac.setEnabled(true);
        btnBusquedaPac.setEnabled(true);
        jcProfesional.setEnabled(true);
        jcProfesional.removeAllItems();
        jcProfesional.addItem("Seleccione");
        jcProfesional.setSelectedIndex(0);
        jxtpEvalFac.setCollapsed(true);
        jxtpAyudMont.setCollapsed(true);
        jxtpManejoEjer.setCollapsed(true);
        jxtpObservaciones.setCollapsed(true);
        btnCrearTerapiaAlternativa.setEnabled(true);
        txtDocCab.setText("");
        txtDocProf.setText("");
        txtDocPac.setText("");
    }//GEN-LAST:event_btnLimpiarTerapiaAlternativaActionPerformed

    /**
     * Regresa al menú principal
     * @param evt 
     */
    private void btnSalirTerapiaAlternativaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirTerapiaAlternativaActionPerformed
        new Menu().setVisible(true);
        this.hide();
    }//GEN-LAST:event_btnSalirTerapiaAlternativaActionPerformed

    /**
     * Llama a la interfaz para la visualización de los registros
     * @param evt 
     */
    private void btnBuscarTerapiaAlternativaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarTerapiaAlternativaActionPerformed
        new TerapiasAlternativasRegistros().setVisible(true);
    }//GEN-LAST:event_btnBuscarTerapiaAlternativaActionPerformed

    /**
     * Búsqueda de los caballos coincidentes según un carácter ingresado
     * @param evt 
     */
    private void btnBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBusquedaActionPerformed
        if(txtDocCab.getText() == null || txtDocCab.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Debe ingresar por lo menos un carácter del número de registro del equino", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }else{
            try {
                jcCaballo.removeAllItems();
                c = OpTerapiasAlternativas.obtenerCaballos(txtDocCab.getText());
                Iterator it = c.keySet().iterator();
                if (c.size()>0) {
                    //JOptionPane.showMessageDialog(null, "Se han encontrado coincidencias");
                }else{
                    //JOptionPane.showMessageDialog(null, "No se han encontrado coincidencias");
                }
                jcCaballo.addItem("Seleccione");
                while(it.hasNext()){
                    jcCaballo.addItem(c.get(it.next()));
                }
                //txtDocCab.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(TerapiasAlternativas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnBusquedaActionPerformed

    /**
     * Búsqueda de los profesionales coincidentes según un carácter ingresado
     * @param evt 
     */
    private void btnBusquedaProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBusquedaProfActionPerformed
        if(txtDocProf.getText() == null || txtDocProf.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Debe ingresar por lo menos un carácter del número de registro del profesional", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }else{
            try {
                jcProfesional.removeAllItems();
                pr = OpTerapiasAlternativas.obtenerProfesionales(txtDocProf.getText());
                Iterator it = pr.keySet().iterator();
                if (pr.size()>0) {
                    //JOptionPane.showMessageDialog(null, "Se han encontrado coincidencias");
                }else{
                    //JOptionPane.showMessageDialog(null, "No se han encontrado coincidencias");
                }
                jcProfesional.addItem("Seleccione");
                while(it.hasNext()){
                    jcProfesional.addItem(pr.get(it.next()));
                }
                //txtDocProf.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(Fisioterapia.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnBusquedaProfActionPerformed

    /**
     * Búsqueda de los pacientes coincidentes según un carácter ingresado
     * @param evt 
     */
    private void btnBusquedaPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBusquedaPacActionPerformed
        if(txtDocPac.getText() == null || txtDocPac.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Debe ingresar por lo menos un carácter del número de identificación del paciente", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }else{
            String diaFecha = String.valueOf(FechaEquinoterapia.getCalendar().get(Calendar.DAY_OF_MONTH));
            String mesFecha = String.valueOf(FechaEquinoterapia.getCalendar().get(Calendar.MONTH) + 1);
            String annoFecha = String.valueOf(FechaEquinoterapia.getCalendar().get(Calendar.YEAR));
            String fecha = diaFecha + "/" + mesFecha + "/" + annoFecha;
            try {
                jcPaciente.removeAllItems();
                p = OpTerapiasAlternativas.obtenerPacientes(txtDocPac.getText(), fecha);
                Iterator it = p.keySet().iterator();
                if (p.size()>0) {
                    //JOptionPane.showMessageDialog(null, "Se han encontrado coincidencias");
                }else{
                    //JOptionPane.showMessageDialog(null, "No se han encontrado coincidencias");
                }
                jcPaciente.addItem("Seleccione");
                while(it.hasNext()){
                    jcPaciente.addItem(p.get(it.next()));
                }
                //txtDocPac.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(Evaluaciones.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnBusquedaPacActionPerformed

    /**
     * Carga el código de la historia clínica asociada, según el paciente seleccionado
     * @param evt 
     */
    private void jcPacienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcPacienteItemStateChanged
        if(jcPaciente.getItemCount() > 0){
            if (!jcPaciente.getSelectedItem().equals("Seleccione")) {
                try {
                    p = OpTerapiasAlternativas.obtenerPacientes();
                    for (Map.Entry<Integer, String> historiaClinica : p.entrySet()){
                        if (jcPaciente.getSelectedItem().toString().equals(historiaClinica.getValue())) {
                            txtNHC.setText(String.valueOf(historiaClinica.getKey()));
                        }
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Evaluaciones.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                txtNHC.setText("");
            }
        }
    }//GEN-LAST:event_jcPacienteItemStateChanged

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TerapiasAlternativas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TerapiasAlternativas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TerapiasAlternativas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TerapiasAlternativas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TerapiasAlternativas().setVisible(true);
            }
        });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static com.toedter.calendar.JDateChooser FechaEquinoterapia;
    private javax.swing.JButton btnBuscarTerapiaAlternativa;
    public static javax.swing.JButton btnBusqueda;
    public static javax.swing.JButton btnBusquedaPac;
    public static javax.swing.JButton btnBusquedaProf;
    public static javax.swing.JButton btnCrearTerapiaAlternativa;
    private javax.swing.JButton btnLimpiarTerapiaAlternativa;
    private javax.swing.JButton btnSalirTerapiaAlternativa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXTaskPaneContainer jXTaskPaneContainer1;
    public static javax.swing.JComboBox jcAltoGalope;
    public static javax.swing.JComboBox jcAltoPaso;
    public static javax.swing.JComboBox jcAltoTrote;
    public static javax.swing.JComboBox jcApoyos;
    public static javax.swing.JComboBox jcAsientFlexion;
    public static javax.swing.JComboBox jcAsientoLig;
    public static javax.swing.JComboBox jcAsientoProf;
    public static javax.swing.JComboBox jcBrazos;
    public static javax.swing.JComboBox jcCaballo;
    public static javax.swing.JComboBox jcCabeza;
    public static javax.swing.JComboBox jcCirculos;
    public static javax.swing.JComboBox jcCodos;
    public static javax.swing.JComboBox jcCoordPsicomotriz;
    public static javax.swing.JComboBox jcEquilibrio;
    public static javax.swing.JComboBox jcFlexibilidad;
    public static javax.swing.JComboBox jcFuerzaMusc;
    public static javax.swing.JComboBox jcMMontManos;
    public static javax.swing.JComboBox jcMMontPelvis;
    public static javax.swing.JComboBox jcMMontPiernas;
    public static javax.swing.JComboBox jcManejoEsp;
    public static javax.swing.JComboBox jcManos;
    public static javax.swing.JComboBox jcPaciente;
    public static javax.swing.JComboBox jcPelvis;
    public static javax.swing.JComboBox jcPiernas;
    public static javax.swing.JComboBox jcPies;
    public static javax.swing.JComboBox jcPostGalope;
    public static javax.swing.JComboBox jcPostPaso;
    public static javax.swing.JComboBox jcPostTrote;
    public static javax.swing.JComboBox jcProfesional;
    public static javax.swing.JComboBox jcSalidGalopePaso;
    public static javax.swing.JComboBox jcSalidGalopeTr;
    public static javax.swing.JComboBox jcSalidTrote;
    public static javax.swing.JComboBox jcSerpentinas;
    public static javax.swing.JComboBox jcTerapia;
    public static javax.swing.JComboBox jcTronco;
    private javax.swing.JPanel jpanelAyudMont;
    private javax.swing.JPanel jpanelEvalFac;
    private javax.swing.JPanel jpanelManejoEjer;
    private javax.swing.JPanel jpanelObs;
    private org.jdesktop.swingx.JXTaskPane jxtpAyudMont;
    private org.jdesktop.swingx.JXTaskPane jxtpEvalFac;
    private org.jdesktop.swingx.JXTaskPane jxtpManejoEjer;
    private org.jdesktop.swingx.JXTaskPane jxtpObservaciones;
    private javax.swing.JLabel labelAltoGalope;
    private javax.swing.JLabel labelAltoPaso;
    private javax.swing.JLabel labelAltoTrote;
    private javax.swing.JLabel labelApoyos;
    private javax.swing.JLabel labelAsientoLig;
    private javax.swing.JLabel labelAsientoProf;
    private javax.swing.JLabel labelAyudMontAsientoProf;
    private javax.swing.JLabel labelAyudMontManos;
    private javax.swing.JLabel labelAyudMontPelvis;
    private javax.swing.JLabel labelAyudMontPiernas;
    private javax.swing.JLabel labelBrazos;
    private javax.swing.JLabel labelCabeza;
    private javax.swing.JLabel labelCirculos;
    private javax.swing.JLabel labelCodCaballo;
    private javax.swing.JLabel labelCodos;
    private javax.swing.JLabel labelCoordPsicomotriz;
    private javax.swing.JLabel labelDoc;
    private javax.swing.JLabel labelEquilibrio;
    private javax.swing.JLabel labelFecha;
    private javax.swing.JLabel labelFlexibilidad;
    private javax.swing.JLabel labelFuerzaMusc;
    private javax.swing.JLabel labelManejoEsp;
    private javax.swing.JLabel labelManos;
    private javax.swing.JLabel labelNHistoriaClinica;
    private javax.swing.JLabel labelObligatorios;
    private javax.swing.JLabel labelObservaciones;
    private javax.swing.JLabel labelPelvis;
    private javax.swing.JLabel labelPiernas;
    private javax.swing.JLabel labelPies;
    private javax.swing.JLabel labelPosturaGalope;
    private javax.swing.JLabel labelPosturaPaso;
    private javax.swing.JLabel labelPosturaTrote;
    private javax.swing.JLabel labelProfesional;
    private javax.swing.JLabel labelSalidasGalopePaso;
    private javax.swing.JLabel labelSalidasGalopeTr;
    private javax.swing.JLabel labelSalidasTrote;
    private javax.swing.JLabel labelSerpentinas;
    private javax.swing.JLabel labelTerapiaAlt;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JLabel labelTronco;
    public static java.awt.TextField txtDocCab;
    public static java.awt.TextField txtDocPac;
    public static java.awt.TextField txtDocProf;
    public static java.awt.TextField txtNHC;
    public static javax.swing.JTextArea txtObservaciones;
    // End of variables declaration//GEN-END:variables
    /**
     * Método que permite guardar la información de la terapia alternativa de un paciente
     * de acuerdo a los datos ingresados.
     */
    public void guardarTerapiaAlternativa(){
        String diaFecha, mesFecha, annoFecha, fecha, hc, terapia, caballo, postPaso, postTrote, postGalope, asientoProf, asientoLig, tronco, cabeza, brazos, codos, manos, pelvis, piernas, pies, ayudMontPelvis, ayudMontPiernas, ayudMontManos, asientoFlex, 
        salidTrote, salidGalopeTr, salidGalopePaso, altoPaso, altoTrote, altoGalope, circulos, serpentinas, apoyos, equilibrio, flexibilidad, coordPsicomotriz, fuerzaMuscular, manejoEsp, observaciones, profesional;
        caballo = "Seleccione";
        profesional = "Seleccione";
        hc = txtNHC.getText();
        terapia = "Seleccione";
        diaFecha = String.valueOf(FechaEquinoterapia.getCalendar().get(Calendar.DAY_OF_MONTH));
        mesFecha = String.valueOf(FechaEquinoterapia.getCalendar().get(Calendar.MONTH) + 1);
        annoFecha = String.valueOf(FechaEquinoterapia.getCalendar().get(Calendar.YEAR));
        fecha = diaFecha + "/" + mesFecha + "/" + annoFecha;
        
        for (Map.Entry<Integer, String> terapias : td.entrySet()){
            int td = terapias.getKey();
            if (jcTerapia.getSelectedItem().toString().equals(terapias.getValue())) {
                terapia = String.valueOf(td);
            }
        }
        
        if (!"Seleccione".equals(jcCaballo.getSelectedItem().toString())) {
            for (Map.Entry<String, String> caballos : c.entrySet()){
                String u = caballos.getKey();
                if (jcCaballo.getSelectedItem().toString().equals(caballos.getValue())) {
                    caballo = u;
                }
            }
        }
        postPaso = jcPostPaso.getSelectedItem().toString();
        postTrote = jcPostTrote.getSelectedItem().toString();
        postGalope = jcPostGalope.getSelectedItem().toString();
        asientoProf = jcAsientoProf.getSelectedItem().toString();
        asientoLig = jcAsientoLig.getSelectedItem().toString();
        tronco = jcTronco.getSelectedItem().toString();
        cabeza = jcCabeza.getSelectedItem().toString();
        brazos = jcBrazos.getSelectedItem().toString();
        codos = jcCodos.getSelectedItem().toString();
        manos = jcManos.getSelectedItem().toString();
        pelvis = jcPelvis.getSelectedItem().toString();
        piernas = jcPiernas.getSelectedItem().toString();
        pies = jcPies.getSelectedItem().toString();
        ayudMontPelvis = jcMMontPelvis.getSelectedItem().toString();
        ayudMontPiernas = jcMMontPiernas.getSelectedItem().toString();
        ayudMontManos = jcMMontManos.getSelectedItem().toString();
        asientoFlex = jcAsientFlexion.getSelectedItem().toString();
        salidTrote = jcSalidTrote.getSelectedItem().toString();
        salidGalopeTr = jcSalidGalopeTr.getSelectedItem().toString();
        salidGalopePaso = jcSalidGalopePaso.getSelectedItem().toString();
        altoPaso = jcAltoPaso.getSelectedItem().toString();
        altoTrote = jcAltoTrote.getSelectedItem().toString();
        altoGalope = jcAltoGalope.getSelectedItem().toString();
        circulos = jcCirculos.getSelectedItem().toString();
        serpentinas = jcSerpentinas.getSelectedItem().toString();
        apoyos = jcApoyos.getSelectedItem().toString();
        equilibrio = jcEquilibrio.getSelectedItem().toString();
        flexibilidad = jcFlexibilidad.getSelectedItem().toString();
        coordPsicomotriz = jcCoordPsicomotriz.getSelectedItem().toString();
        fuerzaMuscular = jcFuerzaMusc.getSelectedItem().toString();
        manejoEsp = jcManejoEsp.getSelectedItem().toString();
        observaciones = txtObservaciones.getText();
        
        if (!"Seleccione".equals(jcProfesional.getSelectedItem().toString())) {
            for (Map.Entry<String, String> profesionales : pr.entrySet()){
                String u = profesionales.getKey();
                if (jcProfesional.getSelectedItem().toString().equals(profesionales.getValue())) {
                    profesional = u;
                }
            }
        }
        if((fecha == null || fecha.trim().isEmpty()) || (hc == null || hc.trim().isEmpty()) || (terapia.equals("Seleccione")) || (caballo.equals("Seleccione")) || (postPaso.equals("Seleccione")) || (postTrote.equals("Seleccione")) || (postGalope.equals("Seleccione")) || (asientoProf.equals("Seleccione")) || (asientoLig.equals("Seleccione")) || (tronco.equals("Seleccione")) || (cabeza.equals("Seleccione")) || (brazos.equals("Seleccione")) || (codos.equals("Seleccione")) || 
                (manos.equals("Seleccione")) || (pelvis.equals("Seleccione")) || (piernas.equals("Seleccione")) || (pies.equals("Seleccione")) || (ayudMontPelvis.equals("Seleccione")) || (ayudMontPiernas.equals("Seleccione")) || (ayudMontManos.equals("Seleccione")) || (asientoFlex.equals("Seleccione")) || (salidTrote.equals("Seleccione")) || (salidGalopeTr.equals("Seleccione")) || (salidGalopePaso.equals("Seleccione")) || (altoPaso.equals("Seleccione")) || 
                (altoTrote.equals("Seleccione")) || (altoGalope.equals("Seleccione")) || (circulos.equals("Seleccione")) || (serpentinas.equals("Seleccione")) || (apoyos.equals("Seleccione")) || (equilibrio.equals("Seleccione")) || (flexibilidad.equals("Seleccione")) || (coordPsicomotriz.equals("Seleccione")) || (fuerzaMuscular.equals("Seleccione")) || (manejoEsp.equals("Seleccione")) || (profesional.equals("Seleccione")) || (observaciones == null || observaciones.trim().isEmpty())){
            JOptionPane.showMessageDialog(null, "Se deben diligenciar todos los campos obligatorios", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }else{
            if (OpTerapiasAlternativas.validarTerapias(hc, terapia)) {
                int a = OpTerapiasAlternativas.guardar(fecha, hc, terapia, caballo, postPaso, postTrote, postGalope, asientoProf, asientoLig, tronco, cabeza, brazos, codos, manos, pelvis, piernas, pies, ayudMontPelvis, ayudMontPiernas, ayudMontManos, asientoFlex, 
        salidTrote, salidGalopeTr, salidGalopePaso, altoPaso, altoTrote, altoGalope, circulos, serpentinas, apoyos, equilibrio, flexibilidad, coordPsicomotriz, fuerzaMuscular, manejoEsp, observaciones, profesional);
                if (a == 0) {
                    FechaEquinoterapia.setDate(new Date());
                    txtNHC.setText("");
                    jcPaciente.removeAllItems();
                    jcPaciente.addItem("Seleccione");
                    jcPaciente.setSelectedIndex(0);
                    jcTerapia.setSelectedIndex(0);
                    jcCaballo.removeAllItems();
                    jcCaballo.addItem("Seleccione");
                    jcCaballo.setSelectedIndex(0);
                    jcPostPaso.setSelectedIndex(0);
                    jcPostTrote.setSelectedIndex(0);
                    jcPostGalope.setSelectedIndex(0);
                    jcAsientoProf.setSelectedIndex(0);
                    jcAsientoLig.setSelectedIndex(0);
                    jcTronco.setSelectedIndex(0);
                    jcCabeza.setSelectedIndex(0);
                    jcBrazos.setSelectedIndex(0);
                    jcCodos.setSelectedIndex(0);
                    jcManos.setSelectedIndex(0);
                    jcPelvis.setSelectedIndex(0);
                    jcPiernas.setSelectedIndex(0);
                    jcPies.setSelectedIndex(0);
                    jcMMontPelvis.setSelectedIndex(0);
                    jcMMontPiernas.setSelectedIndex(0);
                    jcMMontManos.setSelectedIndex(0);
                    jcAsientFlexion.setSelectedIndex(0);
                    jcSalidTrote.setSelectedIndex(0);
                    jcSalidGalopeTr.setSelectedIndex(0);
                    jcSalidGalopePaso.setSelectedIndex(0);
                    jcAltoPaso.setSelectedIndex(0);
                    jcAltoTrote.setSelectedIndex(0);
                    jcAltoGalope.setSelectedIndex(0);
                    jcCirculos.setSelectedIndex(0);
                    jcSerpentinas.setSelectedIndex(0);
                    jcApoyos.setSelectedIndex(0);
                    jcEquilibrio.setSelectedIndex(0);
                    jcFlexibilidad.setSelectedIndex(0);
                    jcCoordPsicomotriz.setSelectedIndex(0);
                    jcFuerzaMusc.setSelectedIndex(0);
                    jcManejoEsp.setSelectedIndex(0);
                    txtObservaciones.setText("");
                    jcProfesional.removeAllItems();
                    jcProfesional.addItem("Seleccione");
                    jcProfesional.setSelectedIndex(0);
                    btnCrearTerapiaAlternativa.setEnabled(true);
                    jxtpEvalFac.setCollapsed(true);
                    jxtpAyudMont.setCollapsed(true);
                    jxtpManejoEjer.setCollapsed(true);
                    jxtpObservaciones.setCollapsed(true);
                    txtDocCab.setText("");
                    txtDocProf.setText("");
                    txtDocPac.setText("");  
                }
            }else{
                JOptionPane.showMessageDialog(null, "El paciente ingresado no tiene asignada dicha terapia", "Gestión Asdesilla", JOptionPane.WARNING_MESSAGE); 
                jxtpEvalFac.setCollapsed(true);
                jxtpAyudMont.setCollapsed(true);
                jxtpManejoEjer.setCollapsed(true);
                jxtpObservaciones.setCollapsed(true);
            }
        }
    }
}
