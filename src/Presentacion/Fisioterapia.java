/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import AccesoDatos.OpFisioterapia;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 * Esta clase permite pintar la ventana Fisioterapia, con sus respectivos componentes, para el manejo de la información del desarrollo motor
 * @author Cristian A. Hoyos Jaramillo
 * @author Daniela Estrada Monsalve
 * @author Yeisson A. Ochoa Villa
 */
public class Fisioterapia extends javax.swing.JFrame {
    Map<String, String> pr;
    Map<Integer, String> p;
    
    public Fisioterapia() {
        initComponents();
        setIconImage (new ImageIcon(getClass().getResource("/Imagenes/fisioterapia-icon.png")).getImage());
        FechaFisioterapia.setDate(new Date());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelFecha = new javax.swing.JLabel();
        FechaFisioterapia = new com.toedter.calendar.JDateChooser();
        labelDoc = new javax.swing.JLabel();
        labelTitulo = new javax.swing.JLabel();
        labelControlCefalico = new javax.swing.JLabel();
        jcContrCefalico = new javax.swing.JComboBox();
        labelRolados = new javax.swing.JLabel();
        jcRolados = new javax.swing.JComboBox();
        labelArrastre = new javax.swing.JLabel();
        jcArrastre = new javax.swing.JComboBox();
        labelGateo = new javax.swing.JLabel();
        jcGateo = new javax.swing.JComboBox();
        labelSedestesacion = new javax.swing.JLabel();
        jcSedestesacion = new javax.swing.JComboBox();
        labelBipedestacion = new javax.swing.JLabel();
        jcBipedestacion = new javax.swing.JComboBox();
        labelMarcha = new javax.swing.JLabel();
        jcMarcha = new javax.swing.JComboBox();
        labelApoyo = new javax.swing.JLabel();
        jcApoyo = new javax.swing.JComboBox();
        labelPartesCuerpo = new javax.swing.JLabel();
        jcPartesCuerpo = new javax.swing.JComboBox();
        labelDPartesCuerpo = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        txtDPartesCuerpo = new javax.swing.JTextArea();
        labelTonoMuscular = new javax.swing.JLabel();
        jcTonoMuscular = new javax.swing.JComboBox();
        labelObservaciones = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        txtObservaciones = new javax.swing.JTextArea();
        btnCrearFisioterapia = new javax.swing.JButton();
        btnBuscarFisioterapia = new javax.swing.JButton();
        btnLimpiarFisioterapia = new javax.swing.JButton();
        btnSalirFisioterapia = new javax.swing.JButton();
        labelProfesional = new javax.swing.JLabel();
        txtDocProf = new java.awt.TextField();
        btnBusquedaProf = new javax.swing.JButton();
        jcProfesional = new javax.swing.JComboBox();
        labelObligatorios = new javax.swing.JLabel();
        txtDocPac = new java.awt.TextField();
        btnBusquedaPac = new javax.swing.JButton();
        jcPaciente = new javax.swing.JComboBox();
        labelNHistoriaClinica = new javax.swing.JLabel();
        txtNHC = new java.awt.TextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Fisioterapia");
        setMinimumSize(new java.awt.Dimension(1305, 700));
        setResizable(false);
        getContentPane().setLayout(null);

        labelFecha.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelFecha.setText("*Fecha:");
        getContentPane().add(labelFecha);
        labelFecha.setBounds(30, 120, 120, 15);

        FechaFisioterapia.setDateFormatString("dd-MM-yyyy");
        FechaFisioterapia.setEnabled(false);
        FechaFisioterapia.setName("FechaN"); // NOI18N
        getContentPane().add(FechaFisioterapia);
        FechaFisioterapia.setBounds(190, 120, 181, 22);

        labelDoc.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelDoc.setText("*Documento Paciente:");
        getContentPane().add(labelDoc);
        labelDoc.setBounds(30, 170, 141, 15);

        labelTitulo.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        labelTitulo.setText("FISIOTERAPIA");
        getContentPane().add(labelTitulo);
        labelTitulo.setBounds(610, 30, 80, 15);

        labelControlCefalico.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelControlCefalico.setText("*Control cefálico:");
        getContentPane().add(labelControlCefalico);
        labelControlCefalico.setBounds(30, 220, 100, 15);

        jcContrCefalico.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Si", "No" }));
        getContentPane().add(jcContrCefalico);
        jcContrCefalico.setBounds(190, 220, 140, 27);

        labelRolados.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelRolados.setText("*Rolados:");
        getContentPane().add(labelRolados);
        labelRolados.setBounds(720, 220, 100, 15);

        jcRolados.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Si", "No" }));
        getContentPane().add(jcRolados);
        jcRolados.setBounds(860, 220, 140, 27);

        labelArrastre.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelArrastre.setText("*Arrastre:");
        getContentPane().add(labelArrastre);
        labelArrastre.setBounds(30, 260, 100, 15);

        jcArrastre.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Si", "No" }));
        getContentPane().add(jcArrastre);
        jcArrastre.setBounds(190, 260, 140, 27);

        labelGateo.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelGateo.setText("*Gateo:");
        getContentPane().add(labelGateo);
        labelGateo.setBounds(720, 260, 100, 15);

        jcGateo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Si", "No" }));
        getContentPane().add(jcGateo);
        jcGateo.setBounds(860, 260, 140, 27);

        labelSedestesacion.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelSedestesacion.setText("*Sedestesación:");
        getContentPane().add(labelSedestesacion);
        labelSedestesacion.setBounds(30, 300, 100, 15);

        jcSedestesacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Si", "No" }));
        getContentPane().add(jcSedestesacion);
        jcSedestesacion.setBounds(190, 300, 140, 27);

        labelBipedestacion.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelBipedestacion.setText("*Bipedestación:");
        getContentPane().add(labelBipedestacion);
        labelBipedestacion.setBounds(720, 300, 100, 15);

        jcBipedestacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Si", "No" }));
        getContentPane().add(jcBipedestacion);
        jcBipedestacion.setBounds(860, 300, 140, 27);

        labelMarcha.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelMarcha.setText("*Marcha:");
        getContentPane().add(labelMarcha);
        labelMarcha.setBounds(30, 340, 100, 15);

        jcMarcha.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Si", "No" }));
        jcMarcha.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcMarchaItemStateChanged(evt);
            }
        });
        getContentPane().add(jcMarcha);
        jcMarcha.setBounds(190, 340, 140, 27);

        labelApoyo.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelApoyo.setText("Apoyo:");
        getContentPane().add(labelApoyo);
        labelApoyo.setBounds(720, 340, 100, 15);

        jcApoyo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Con apoyo", "Sin apoyo" }));
        jcApoyo.setEnabled(false);
        getContentPane().add(jcApoyo);
        jcApoyo.setBounds(860, 340, 140, 27);

        labelPartesCuerpo.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelPartesCuerpo.setText("*Partes del cuerpo:");
        getContentPane().add(labelPartesCuerpo);
        labelPartesCuerpo.setBounds(30, 380, 110, 20);

        jcPartesCuerpo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Reconoce", "No reconoce" }));
        jcPartesCuerpo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcPartesCuerpoItemStateChanged(evt);
            }
        });
        getContentPane().add(jcPartesCuerpo);
        jcPartesCuerpo.setBounds(190, 380, 140, 27);

        labelDPartesCuerpo.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelDPartesCuerpo.setText("¿Cuáles?");
        getContentPane().add(labelDPartesCuerpo);
        labelDPartesCuerpo.setBounds(720, 380, 60, 15);

        txtDPartesCuerpo.setColumns(20);
        txtDPartesCuerpo.setRows(5);
        txtDPartesCuerpo.setEnabled(false);
        jScrollPane12.setViewportView(txtDPartesCuerpo);

        getContentPane().add(jScrollPane12);
        jScrollPane12.setBounds(860, 380, 420, 60);

        labelTonoMuscular.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelTonoMuscular.setText("*Tono muscular:");
        getContentPane().add(labelTonoMuscular);
        labelTonoMuscular.setBounds(30, 450, 110, 20);

        jcTonoMuscular.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Normal", "Anormal" }));
        getContentPane().add(jcTonoMuscular);
        jcTonoMuscular.setBounds(190, 450, 140, 27);

        labelObservaciones.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelObservaciones.setText("*Observaciones:");
        getContentPane().add(labelObservaciones);
        labelObservaciones.setBounds(30, 500, 90, 15);

        txtObservaciones.setColumns(20);
        txtObservaciones.setRows(5);
        jScrollPane13.setViewportView(txtObservaciones);

        getContentPane().add(jScrollPane13);
        jScrollPane13.setBounds(190, 500, 450, 60);

        btnCrearFisioterapia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/add.png"))); // NOI18N
        btnCrearFisioterapia.setText("Crear");
        btnCrearFisioterapia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearFisioterapiaActionPerformed(evt);
            }
        });
        getContentPane().add(btnCrearFisioterapia);
        btnCrearFisioterapia.setBounds(230, 600, 130, 34);

        btnBuscarFisioterapia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/search.png"))); // NOI18N
        btnBuscarFisioterapia.setText("Buscar");
        btnBuscarFisioterapia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarFisioterapiaActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscarFisioterapia);
        btnBuscarFisioterapia.setBounds(450, 600, 125, 34);

        btnLimpiarFisioterapia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Actions-edit-clear-icon.png"))); // NOI18N
        btnLimpiarFisioterapia.setText("Limpiar");
        btnLimpiarFisioterapia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarFisioterapiaActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpiarFisioterapia);
        btnLimpiarFisioterapia.setBounds(670, 600, 137, 34);

        btnSalirFisioterapia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Log-Out-icon.png"))); // NOI18N
        btnSalirFisioterapia.setText("Salir");
        btnSalirFisioterapia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirFisioterapiaActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalirFisioterapia);
        btnSalirFisioterapia.setBounds(930, 600, 137, 34);

        labelProfesional.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelProfesional.setText("*Registro del Profesional:");
        getContentPane().add(labelProfesional);
        labelProfesional.setBounds(720, 180, 140, 13);

        txtDocProf.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtDocProf);
        txtDocProf.setBounds(860, 180, 130, 19);

        btnBusquedaProf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/search.png"))); // NOI18N
        btnBusquedaProf.setToolTipText("La búsqueda se  puede generar a partir de los primeros dígitos del registro del profesional");
        btnBusquedaProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBusquedaProfActionPerformed(evt);
            }
        });
        getContentPane().add(btnBusquedaProf);
        btnBusquedaProf.setBounds(1000, 170, 50, 30);

        jcProfesional.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        getContentPane().add(jcProfesional);
        jcProfesional.setBounds(1060, 180, 220, 20);

        labelObligatorios.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        labelObligatorios.setText("Los campos con * son obligatorios");
        getContentPane().add(labelObligatorios);
        labelObligatorios.setBounds(540, 60, 210, 15);

        txtDocPac.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtDocPac);
        txtDocPac.setBounds(190, 170, 130, 19);

        btnBusquedaPac.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/search.png"))); // NOI18N
        btnBusquedaPac.setToolTipText("La búsqueda se  puede generar a partir de los primeros números del documento");
        btnBusquedaPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBusquedaPacActionPerformed(evt);
            }
        });
        getContentPane().add(btnBusquedaPac);
        btnBusquedaPac.setBounds(330, 160, 50, 30);

        jcPaciente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        jcPaciente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcPacienteItemStateChanged(evt);
            }
        });
        getContentPane().add(jcPaciente);
        jcPaciente.setBounds(390, 170, 220, 27);

        labelNHistoriaClinica.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelNHistoriaClinica.setText("*Número Historia Clínica:");
        getContentPane().add(labelNHistoriaClinica);
        labelNHistoriaClinica.setBounds(720, 130, 140, 15);

        txtNHC.setEnabled(false);
        getContentPane().add(txtNHC);
        txtNHC.setBounds(860, 130, 130, 19);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondo.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1310, 670);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Habilita el campo apoyo, en caso de haberse seleccionado marcha en sí
     * @param evt 
     */
    private void jcMarchaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcMarchaItemStateChanged
        String marcha = jcMarcha.getSelectedItem().toString();
        if (!marcha.equals("Seleccione") && marcha.equals("Si")) {
            jcApoyo.setEnabled(true);
        }else{
            jcApoyo.setEnabled(false);
        }
    }//GEN-LAST:event_jcMarchaItemStateChanged

    /**
     * Habilita el campo descripción partes del cuerpo, en caso de haberse seleccionado partes del cuerpo en reconoce
     * @param evt 
     */
    private void jcPartesCuerpoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcPartesCuerpoItemStateChanged
        String partesCuerpo = jcPartesCuerpo.getSelectedItem().toString();
        if (!partesCuerpo.equals("Seleccione") && partesCuerpo.equals("Reconoce")) {
            txtDPartesCuerpo.setEnabled(true);
        }else{
            txtDPartesCuerpo.setEnabled(false);
        }
    }//GEN-LAST:event_jcPartesCuerpoItemStateChanged
    /**
     * Llama al método guardar
     * @param evt 
     */
    private void btnCrearFisioterapiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearFisioterapiaActionPerformed
        guardarFisioterapia();
    }//GEN-LAST:event_btnCrearFisioterapiaActionPerformed
    /**
     * Llama a la interfaz para la visualización de los registros
     * @param evt 
     */
    private void btnBuscarFisioterapiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarFisioterapiaActionPerformed
        new FisioterapiaRegistros().setVisible(true);
    }//GEN-LAST:event_btnBuscarFisioterapiaActionPerformed
    /**
     * Limpia los campos del formulario, asignandoles el valor por defecto
     * @param evt 
     */
    private void btnLimpiarFisioterapiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarFisioterapiaActionPerformed
        FechaFisioterapia.setDate(new Date());
        txtNHC.setText("");
        jcPaciente.setEnabled(true);
        jcPaciente.removeAllItems();
        jcPaciente.addItem("Seleccione");
        txtDocPac.setEnabled(true);
        btnBusquedaPac.setEnabled(true);
        jcContrCefalico.setEnabled(true);
        jcContrCefalico.setSelectedIndex(0);
        jcRolados.setEnabled(true);
        jcRolados.setSelectedIndex(0);
        jcArrastre.setEnabled(true);
        jcArrastre.setSelectedIndex(0);
        jcGateo.setEnabled(true);
        jcGateo.setSelectedIndex(0);
        jcSedestesacion.setEnabled(true);
        jcSedestesacion.setSelectedIndex(0);
        jcBipedestacion.setEnabled(true);
        jcBipedestacion.setSelectedIndex(0);
        jcMarcha.setEnabled(true);
        jcMarcha.setSelectedIndex(0);
        jcApoyo.setSelectedIndex(0);
        jcApoyo.setEnabled(false);
        jcPartesCuerpo.setEnabled(true);
        jcPartesCuerpo.setSelectedIndex(0);
        txtDPartesCuerpo.setText("");
        txtDPartesCuerpo.setEnabled(false);
        jcTonoMuscular.setEnabled(true);
        jcTonoMuscular.setSelectedIndex(0);
        txtObservaciones.setEnabled(true);
        txtObservaciones.setText("");
        jcProfesional.setEnabled(true);
        jcProfesional.removeAllItems();
        jcProfesional.addItem("Seleccione");
        txtDocProf.setEnabled(true);
        btnBusquedaProf.setEnabled(true);
        btnCrearFisioterapia.setEnabled(true);
        txtDocProf.setText("");
        txtDocPac.setText("");
    }//GEN-LAST:event_btnLimpiarFisioterapiaActionPerformed
    /**
     * Regresa al menú principal
     * @param evt 
     */
    private void btnSalirFisioterapiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirFisioterapiaActionPerformed
        new Menu().setVisible(true);
        this.hide();
    }//GEN-LAST:event_btnSalirFisioterapiaActionPerformed

    /**
     * Búsqueda de los profesionales coincidentes según un carácter ingresado
     * @param evt 
     */
    private void btnBusquedaProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBusquedaProfActionPerformed
        if(txtDocProf.getText() == null || txtDocProf.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Debe ingresar por lo menos un carácter del número de registro del profesional", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }else{
            try {
                jcProfesional.removeAllItems();
                pr = OpFisioterapia.obtenerProfesionales(txtDocProf.getText());
                Iterator it = pr.keySet().iterator();
                if (pr.size()>0) {
                    //JOptionPane.showMessageDialog(null, "Se han encontrado coincidencias");
                }else{
                    //JOptionPane.showMessageDialog(null, "No se han encontrado coincidencias");
                }
                jcProfesional.addItem("Seleccione");
                while(it.hasNext()){
                    jcProfesional.addItem(pr.get(it.next()));
                }
                //txtDocProf.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(Fisioterapia.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnBusquedaProfActionPerformed

    /**
     * Búsqueda de los pacientes coincidentes según un carácter ingresado
     * @param evt 
     */
    private void btnBusquedaPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBusquedaPacActionPerformed
        if(txtDocPac.getText() == null || txtDocPac.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Debe ingresar por lo menos un carácter del número de identificación del paciente", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
        }else{
            String diaFecha = String.valueOf(FechaFisioterapia.getCalendar().get(Calendar.DAY_OF_MONTH));
            String mesFecha = String.valueOf(FechaFisioterapia.getCalendar().get(Calendar.MONTH) + 1);
            String annoFecha = String.valueOf(FechaFisioterapia.getCalendar().get(Calendar.YEAR));
            String fecha = diaFecha + "/" + mesFecha + "/" + annoFecha;
            try {
                jcPaciente.removeAllItems();
                p = OpFisioterapia.obtenerPacientes(txtDocPac.getText(), fecha);
                Iterator it = p.keySet().iterator();
                if (p.size()>0) {
                    //JOptionPane.showMessageDialog(null, "Se han encontrado coincidencias");
                }else{
                    //JOptionPane.showMessageDialog(null, "No se han encontrado coincidencias");
                }
                jcPaciente.addItem("Seleccione");
                while(it.hasNext()){
                    jcPaciente.addItem(p.get(it.next()));
                }
                //txtDocPac.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(Evaluaciones.class.getName()).log(Level.SEVERE, null, ex);
            }                                                    
        }
    }//GEN-LAST:event_btnBusquedaPacActionPerformed

    /**
     * Carga el código de la historia clínica asociada, según el paciente seleccionado
     * @param evt 
     */
    private void jcPacienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcPacienteItemStateChanged
        if(jcPaciente.getItemCount() > 0){
            if (!jcPaciente.getSelectedItem().equals("Seleccione")) {
                try {
                    p = OpFisioterapia.obtenerPacientes();
                    for (Map.Entry<Integer, String> historiaClinica : p.entrySet()){
                        if (jcPaciente.getSelectedItem().toString().equals(historiaClinica.getValue())) {
                            txtNHC.setText(String.valueOf(historiaClinica.getKey()));
                        }
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Evaluaciones.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                txtNHC.setText("");
            }
        }
    }//GEN-LAST:event_jcPacienteItemStateChanged

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fisioterapia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fisioterapia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fisioterapia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fisioterapia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fisioterapia().setVisible(true);
            }
        });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static com.toedter.calendar.JDateChooser FechaFisioterapia;
    private javax.swing.JButton btnBuscarFisioterapia;
    public static javax.swing.JButton btnBusquedaPac;
    public static javax.swing.JButton btnBusquedaProf;
    public static javax.swing.JButton btnCrearFisioterapia;
    private javax.swing.JButton btnLimpiarFisioterapia;
    private javax.swing.JButton btnSalirFisioterapia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    public static javax.swing.JComboBox jcApoyo;
    public static javax.swing.JComboBox jcArrastre;
    public static javax.swing.JComboBox jcBipedestacion;
    public static javax.swing.JComboBox jcContrCefalico;
    public static javax.swing.JComboBox jcGateo;
    public static javax.swing.JComboBox jcMarcha;
    public static javax.swing.JComboBox jcPaciente;
    public static javax.swing.JComboBox jcPartesCuerpo;
    public static javax.swing.JComboBox jcProfesional;
    public static javax.swing.JComboBox jcRolados;
    public static javax.swing.JComboBox jcSedestesacion;
    public static javax.swing.JComboBox jcTonoMuscular;
    private javax.swing.JLabel labelApoyo;
    private javax.swing.JLabel labelArrastre;
    private javax.swing.JLabel labelBipedestacion;
    private javax.swing.JLabel labelControlCefalico;
    private javax.swing.JLabel labelDPartesCuerpo;
    private javax.swing.JLabel labelDoc;
    private javax.swing.JLabel labelFecha;
    private javax.swing.JLabel labelGateo;
    private javax.swing.JLabel labelMarcha;
    private javax.swing.JLabel labelNHistoriaClinica;
    private javax.swing.JLabel labelObligatorios;
    private javax.swing.JLabel labelObservaciones;
    private javax.swing.JLabel labelPartesCuerpo;
    private javax.swing.JLabel labelProfesional;
    private javax.swing.JLabel labelRolados;
    private javax.swing.JLabel labelSedestesacion;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JLabel labelTonoMuscular;
    public static javax.swing.JTextArea txtDPartesCuerpo;
    public static java.awt.TextField txtDocPac;
    public static java.awt.TextField txtDocProf;
    public static java.awt.TextField txtNHC;
    public static javax.swing.JTextArea txtObservaciones;
    // End of variables declaration//GEN-END:variables
    /**
     * Método que permite guardar la información de la fisioterapia de un paciente
     * con base en los datos ingresados.
     */
    public void guardarFisioterapia(){
        String diaFecha, mesFecha, annoFecha, fecha, hc, controlCefalico, rolados, arrastre, gateo, sedestesacion, bipedestacion, marcha, apoyo, partesCuerpo, dPartesCuerpo, tonoMuscular, Observaciones, profesional;
        profesional = "Seleccione";
        diaFecha = String.valueOf(FechaFisioterapia.getCalendar().get(Calendar.DAY_OF_MONTH));
        mesFecha = String.valueOf(FechaFisioterapia.getCalendar().get(Calendar.MONTH) + 1);
        annoFecha = String.valueOf(FechaFisioterapia.getCalendar().get(Calendar.YEAR));
        fecha = diaFecha + "/" + mesFecha + "/" + annoFecha;
        
        hc = txtNHC.getText();
        controlCefalico = jcContrCefalico.getSelectedItem().toString();
        rolados = jcRolados.getSelectedItem().toString();
        arrastre = jcArrastre.getSelectedItem().toString();
        gateo = jcGateo.getSelectedItem().toString();
        sedestesacion = jcSedestesacion.getSelectedItem().toString();
        bipedestacion = jcBipedestacion.getSelectedItem().toString();
        marcha = jcMarcha.getSelectedItem().toString();
        apoyo = jcApoyo.getSelectedItem().toString();
        partesCuerpo = jcPartesCuerpo.getSelectedItem().toString();
        dPartesCuerpo = txtDPartesCuerpo.getText();
        tonoMuscular = jcTonoMuscular.getSelectedItem().toString();
        Observaciones = txtObservaciones.getText();
        
        if (!"Seleccione".equals(jcProfesional.getSelectedItem().toString())) {
            for (Map.Entry<String, String> profesionales : pr.entrySet()){
                String u = profesionales.getKey();
                if (jcProfesional.getSelectedItem().toString().equals(profesionales.getValue())) {
                    profesional = u;
                }
            }
        }
        if(marcha.equals("Seleccione")){
            if((fecha == null || fecha.trim().isEmpty()) || (hc == null || hc.trim().isEmpty()) || (controlCefalico.equals("Seleccione")) || (rolados.equals("Seleccione")) || (arrastre.equals("Seleccione")) || (gateo.equals("Seleccione")) || (sedestesacion.equals("Seleccione")) || (bipedestacion.equals("Seleccione")) || (tonoMuscular.equals("Seleccione")) ||(profesional.equals("Seleccione")) || (Observaciones == null || Observaciones.trim().isEmpty())){
                JOptionPane.showMessageDialog(null, "Se deben diligenciar todos los campos obligatorios", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(null, "Debe diligenciar el campo marcha", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
            }
        }else if(partesCuerpo.equals("Seleccione")){
            if((fecha == null || fecha.trim().isEmpty()) || (hc == null || hc.trim().isEmpty()) || (controlCefalico.equals("Seleccione")) || (rolados.equals("Seleccione")) || (arrastre.equals("Seleccione")) || (gateo.equals("Seleccione")) || (sedestesacion.equals("Seleccione")) || (bipedestacion.equals("Seleccione")) || (tonoMuscular.equals("Seleccione")) ||(profesional.equals("Seleccione")) || (Observaciones == null || Observaciones.trim().isEmpty())){
                JOptionPane.showMessageDialog(null, "Se deben diligenciar todos los campos obligatorios", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(null, "Debe diligenciar el campo partes del cuerpo", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
            } 
        }
        if (!marcha.equals("Seleccione") && !partesCuerpo.equals("Seleccione")) {
            if (marcha.equals("Sí") && partesCuerpo.equals("Reconoce")) {
                if((fecha == null || fecha.trim().isEmpty()) || (hc == null || hc.trim().isEmpty()) || (controlCefalico.equals("Seleccione")) || (rolados.equals("Seleccione")) || (arrastre.equals("Seleccione")) || (gateo.equals("Seleccione")) || (sedestesacion.equals("Seleccione")) || (bipedestacion.equals("Seleccione")) || (marcha.equals("Seleccione")) || (partesCuerpo.equals("Seleccione")) || (apoyo.equals("Seleccione")) || (dPartesCuerpo == null || dPartesCuerpo.trim().isEmpty())|| (tonoMuscular.equals("Seleccione")) ||(profesional.equals("Seleccione")) || (Observaciones == null || Observaciones.trim().isEmpty())){
                    JOptionPane.showMessageDialog(null, "Se deben diligenciar todos los campos obligatorios", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
                }else{
                    if (OpFisioterapia.validarTerapias(hc)) {
                        int a = OpFisioterapia.guardar(fecha, hc, controlCefalico, rolados, arrastre, gateo, sedestesacion, bipedestacion, marcha, apoyo, partesCuerpo, dPartesCuerpo, tonoMuscular, Observaciones, profesional);
                        if (a == 0) {
                            FechaFisioterapia.setDate(new Date());
                            jcPaciente.removeAllItems();
                            jcPaciente.addItem("Seleccione");
                            txtNHC.setText("");
                            jcContrCefalico.setSelectedIndex(0);
                            jcRolados.setSelectedIndex(0);
                            jcArrastre.setSelectedIndex(0);
                            jcGateo.setSelectedIndex(0);
                            jcSedestesacion.setSelectedIndex(0);
                            jcBipedestacion.setSelectedIndex(0);
                            jcMarcha.setSelectedIndex(0);
                            jcApoyo.setSelectedIndex(0);
                            jcApoyo.setEnabled(false);
                            jcPartesCuerpo.setSelectedIndex(0);
                            txtDPartesCuerpo.setText("");
                            txtDPartesCuerpo.setEnabled(false);
                            jcTonoMuscular.setSelectedIndex(0);
                            txtObservaciones.setText("");
                            jcProfesional.removeAllItems();
                            jcProfesional.addItem("Seleccione");
                            btnCrearFisioterapia.setEnabled(true);
                            txtDocProf.setText("");
                            txtDocPac.setText("");
                        }
                    }else{
                        JOptionPane.showMessageDialog(null, "El paciente ingresado no tiene asignada dicha terapia", "Gestión Asdesilla", JOptionPane.WARNING_MESSAGE);
                        FechaFisioterapia.setDate(new Date());
                        jcPaciente.removeAllItems();
                        jcPaciente.addItem("Seleccione");
                        txtNHC.setText("");
                        jcContrCefalico.setSelectedIndex(0);
                        jcRolados.setSelectedIndex(0);
                        jcArrastre.setSelectedIndex(0);
                        jcGateo.setSelectedIndex(0);
                        jcSedestesacion.setSelectedIndex(0);
                        jcBipedestacion.setSelectedIndex(0);
                        jcMarcha.setSelectedIndex(0);
                        jcApoyo.setSelectedIndex(0);
                        jcApoyo.setEnabled(false);
                        jcPartesCuerpo.setSelectedIndex(0);
                        txtDPartesCuerpo.setText("");
                        txtDPartesCuerpo.setEnabled(false);
                        jcTonoMuscular.setSelectedIndex(0);
                        txtObservaciones.setText("");
                        jcProfesional.removeAllItems();
                        jcProfesional.addItem("Seleccione");
                        btnCrearFisioterapia.setEnabled(true);
                        txtDocProf.setText("");
                        txtDocPac.setText("");
                    }
                }
            }else if(marcha.equals("No") && partesCuerpo.equals("No reconoce")){
                if((fecha == null || fecha.trim().isEmpty()) || (hc == null || hc.trim().isEmpty()) || (controlCefalico.equals("Seleccione")) || (rolados.equals("Seleccione")) || (arrastre.equals("Seleccione")) || (gateo.equals("Seleccione")) || (sedestesacion.equals("Seleccione")) || (bipedestacion.equals("Seleccione")) || (marcha.equals("Seleccione")) || (partesCuerpo.equals("Seleccione")) || (tonoMuscular.equals("Seleccione")) ||(profesional.equals("Seleccione")) || (Observaciones == null || Observaciones.trim().isEmpty())){
                    JOptionPane.showMessageDialog(null, "Se deben diligenciar todos los campos obligatorios", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
                }else{
                    if (OpFisioterapia.validarTerapias(hc)) {
                        int a = OpFisioterapia.guardar(fecha, hc, controlCefalico, rolados, arrastre, gateo, sedestesacion, bipedestacion, marcha, apoyo, partesCuerpo, dPartesCuerpo, tonoMuscular, Observaciones, profesional);
                        if (a == 0) {
                            FechaFisioterapia.setDate(new Date());
                            jcPaciente.removeAllItems();
                            jcPaciente.addItem("Seleccione");
                            txtNHC.setText("");
                            jcContrCefalico.setSelectedIndex(0);
                            jcRolados.setSelectedIndex(0);
                            jcArrastre.setSelectedIndex(0);
                            jcGateo.setSelectedIndex(0);
                            jcSedestesacion.setSelectedIndex(0);
                            jcBipedestacion.setSelectedIndex(0);
                            jcMarcha.setSelectedIndex(0);
                            jcApoyo.setSelectedIndex(0);
                            jcApoyo.setEnabled(false);
                            jcPartesCuerpo.setSelectedIndex(0);
                            txtDPartesCuerpo.setText("");
                            txtDPartesCuerpo.setEnabled(false);
                            jcTonoMuscular.setSelectedIndex(0);
                            txtObservaciones.setText("");
                            jcProfesional.removeAllItems();
                            jcProfesional.addItem("Seleccione");
                            btnCrearFisioterapia.setEnabled(true);
                            txtDocProf.setText("");
                            txtDocPac.setText("");
                        }
                    }else{
                        JOptionPane.showMessageDialog(null, "El paciente ingresado no tiene asignada dicha terapia", "Gestión Asdesilla", JOptionPane.WARNING_MESSAGE);
                        btnCrearFisioterapia.setEnabled(true);
                        txtDocProf.setText("");
                        txtDocPac.setText("");
                    }
                }
            }else if(marcha.equals("Sí") && partesCuerpo.equals("No reconoce")){
                if((fecha == null || fecha.trim().isEmpty()) || (hc == null || hc.trim().isEmpty()) || (controlCefalico.equals("Seleccione")) || (rolados.equals("Seleccione")) || (arrastre.equals("Seleccione")) || (gateo.equals("Seleccione")) || (sedestesacion.equals("Seleccione")) || (bipedestacion.equals("Seleccione")) || (marcha.equals("Seleccione")) || (apoyo.equals("Seleccione")) || (partesCuerpo.equals("Seleccione")) || (tonoMuscular.equals("Seleccione")) ||(profesional.equals("Seleccione")) || (Observaciones == null || Observaciones.trim().isEmpty())){
                    JOptionPane.showMessageDialog(null, "Se deben diligenciar todos los campos obligatorios", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
                }else{
                    if (OpFisioterapia.validarTerapias(hc)) {
                        int a = OpFisioterapia.guardar(fecha, hc, controlCefalico, rolados, arrastre, gateo, sedestesacion, bipedestacion, marcha, apoyo, partesCuerpo, dPartesCuerpo, tonoMuscular, Observaciones, profesional);
                        if (a == 0) {
                            FechaFisioterapia.setDate(new Date());
                            jcPaciente.removeAllItems();
                            jcPaciente.addItem("Seleccione");
                            txtNHC.setText("");
                            jcContrCefalico.setSelectedIndex(0);
                            jcRolados.setSelectedIndex(0);
                            jcArrastre.setSelectedIndex(0);
                            jcGateo.setSelectedIndex(0);
                            jcSedestesacion.setSelectedIndex(0);
                            jcBipedestacion.setSelectedIndex(0);
                            jcMarcha.setSelectedIndex(0);
                            jcApoyo.setSelectedIndex(0);
                            jcApoyo.setEnabled(false);
                            jcPartesCuerpo.setSelectedIndex(0);
                            txtDPartesCuerpo.setText("");
                            txtDPartesCuerpo.setEnabled(false);
                            jcTonoMuscular.setSelectedIndex(0);
                            txtObservaciones.setText("");
                            jcProfesional.removeAllItems();
                            jcProfesional.addItem("Seleccione");
                            btnCrearFisioterapia.setEnabled(true);
                            txtDocProf.setText("");
                            txtDocPac.setText("");
                        }
                    }else{
                        JOptionPane.showMessageDialog(null, "El paciente ingresado no tiene asignada dicha terapia", "Gestión Asdesilla", JOptionPane.WARNING_MESSAGE);
                        btnCrearFisioterapia.setEnabled(true);
                        txtDocProf.setText("");
                        txtDocPac.setText("");
                    }
                }
            }else if(marcha.equals("No") && partesCuerpo.equals("Reconoce")){
                if((fecha == null || fecha.trim().isEmpty()) || (hc == null || hc.trim().isEmpty()) || (controlCefalico.equals("Seleccione")) || (rolados.equals("Seleccione")) || (arrastre.equals("Seleccione")) || (gateo.equals("Seleccione")) || (sedestesacion.equals("Seleccione")) || (bipedestacion.equals("Seleccione")) || (marcha.equals("Seleccione")) || (partesCuerpo.equals("Seleccione")) || (dPartesCuerpo == null || dPartesCuerpo.trim().isEmpty()) || (tonoMuscular.equals("Seleccione")) ||(profesional.equals("Seleccione")) || (Observaciones == null || Observaciones.trim().isEmpty())){
                    JOptionPane.showMessageDialog(null, "Se deben diligenciar todos los campos obligatorios", "Gestión Asdesilla", JOptionPane.ERROR_MESSAGE);
                }else{
                    if (OpFisioterapia.validarTerapias(hc)) {
                        int a = OpFisioterapia.guardar(fecha, hc, controlCefalico, rolados, arrastre, gateo, sedestesacion, bipedestacion, marcha, apoyo, partesCuerpo, dPartesCuerpo, tonoMuscular, Observaciones, profesional);
                        if (a == 0) {
                            FechaFisioterapia.setDate(new Date());
                            jcPaciente.removeAllItems();
                            jcPaciente.addItem("Seleccione");
                            txtNHC.setText("");
                            jcContrCefalico.setSelectedIndex(0);
                            jcRolados.setSelectedIndex(0);
                            jcArrastre.setSelectedIndex(0);
                            jcGateo.setSelectedIndex(0);
                            jcSedestesacion.setSelectedIndex(0);
                            jcBipedestacion.setSelectedIndex(0);
                            jcMarcha.setSelectedIndex(0);
                            jcApoyo.setSelectedIndex(0);
                            jcApoyo.setEnabled(false);
                            jcPartesCuerpo.setSelectedIndex(0);
                            txtDPartesCuerpo.setText("");
                            txtDPartesCuerpo.setEnabled(false);
                            jcTonoMuscular.setSelectedIndex(0);
                            txtObservaciones.setText("");
                            jcProfesional.removeAllItems();
                            jcProfesional.addItem("Seleccione");
                            btnCrearFisioterapia.setEnabled(true);
                            txtDocProf.setText("");
                            txtDocPac.setText("");
                        }
                    }else{
                        JOptionPane.showMessageDialog(null, "El paciente ingresado no tiene asignada dicha terapia", "Gestión Asdesilla", JOptionPane.WARNING_MESSAGE);
                    }
                }
            }
        }
    }
}
